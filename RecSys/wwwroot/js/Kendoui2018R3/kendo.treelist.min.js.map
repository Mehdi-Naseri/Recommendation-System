{"version":3,"sources":["kendo.treelist.js"],"names":["f","define","$","undefined","is","field","object","not","func","isCellVisible","this","style","display","sortCells","cells","indexAttr","kendo","attr","sort","a","b","indexA","indexB","index","parseInt","leafDataCells","container","rows","find","filter","el","hasClass","length","rowSpan","add","last","createPlaceholders","options","i","level","spans","className","push","kendoDomElement","columnsWidth","cols","colWidth","idx","width","indexOf","syncTableHeight","table1","table2","lockedHeigth","tableHeigth","row","diff","offsetHeight","height","isInputElement","element","isLocked","column","parentColumn","locked","findParentColumnWithChildren","columns","source","rtl","target","targetLocked","findReorderTarget","before","masterColumns","parent","parentColumns","sourceIndex","targetIndex","columnParent","inArray","leafColumns","result","concat","visibleChildColumns","grep","hidden","isVisible","visibleColumns","normalizeColumns","hide","map","extend","flatColumnsInDomOrder","flatColumns","lockedColumns","nonLockedColumns","targetParentContainerIndex","parentColumnsCells","cell","parentCellsWithChildren","offset","prevCells","parentCell","closest","headerRows","eq","prevAll","colSpan","Math","max","getAttribute","childColumnsCells","child","value","colSpanAttr","next","parents","columnParents","inserted","splice","children","columnPosition","cellCounts","updateCellIndex","thead","position","allColumns","depth","temp","updateRowSpans","containerDOMtree","each","attributes","rowspan","removeEmptyRows","emptyRows","shouldRemove","remove","focusTable","table","direct","scrollTop","scrollLeft","msie","browser","edge","setActive","e","focus","one","preventDefault","adjustRowHeight","row1","row2","offsetHeight1","offsetHeight2","isColumnEditable","model","selectable","command","editable","isDirtyColumn","dirty","dirtyFields","isUndefined","isNumber","isNaN","TreeListModel","TreeListDataSource","TreeListPager","Editor","PopupEditor","IncellEditor","TreeList","data","kendoDom","dom","kendoTextElement","text","kendoHtmlElement","html","outerWidth","_outerWidth","keys","outerHeight","_outerHeight","ui","DataBoundWidget","DataSource","ObservableArray","Query","Model","support","kendoTemplate","template","activeElement","_activeElement","isArray","proxy","isPlainObject","Array","prototype","STRING","CHANGE","ITEM_CHANGE","ERROR","PROGRESS","DOT","NS","CLICK","MOUSEDOWN","BEFORE_EDIT","EDIT","PAGE","PAGE_CHANGE","SAVE","SAVE_CHANGES","EXPAND","COLLAPSE","CELL_CLOSE","REMOVE","DATA_CELL","DATABINDING","DATABOUND","CANCEL","TABINDEX","FILTERMENUINIT","FILTERMENUOPEN","COLUMNHIDE","COLUMNSHOW","HEADERCELLS","COLUMNREORDER","COLUMNRESIZE","COLUMNMENUINIT","COLUMNMENUOPEN","COLUMNLOCK","COLUMNUNLOCK","PARENTIDFIELD","DRAGSTART","DRAG","DROP","DRAGEND","NAVROW","NAVCELL","NAVHEADER","ITEMROW","FIRSTNAVITEM","LASTITEMROW","isRtl","HEIGHT","INCELL","POPUP","TABLE","classNames","wrapper","header","button","alt","editCell","editRow","dirtyCell","group","gridToolbar","gridHeader","gridHeaderWrap","gridContent","gridContentWrap","gridFilter","footerTemplate","focused","loading","refresh","retry","selected","status","link","withIcon","filterable","icon","iconFilter","iconCollapse","iconExpand","iconHidden","iconPlaceHolder","input","dropPositions","dropTop","dropBottom","dropAdd","dropMiddle","dropDenied","dragStatus","dragClue","dragClueText","defaultCommands","create","imageClass","methodName","createchild","destroy","edit","update","canceledit","cancel","save","excel","pdf","TreeView","Class","init","that","defaultParentId","idField","parentIdField","childrenMap","dataItem","dataItemId","dataItemParentId","dataLength","_childrenMap","idsMap","_idMap","dataMaps","_dataMaps","ids","rootNodes","removeCollapsedSubtreesFromRootNodes","prunedTree","maxDepth","Infinity","removeCollapsedSubtrees","rootNode","childIdx","expanded","TreeQuery","constructor","process","inPlace","query","filterCallback","skip","take","total","filteredChildrenMap","view","prunedData","normalizeGroup","normalizeSort","toArray","processFromRootNodes","range","id","parentId","fields","type","nullable","fn","call","_loaded","get","accept","set","initiator","loaded","shouldSerialize","base","_getDataMaps","schema","modelBase","_addRange","_createNewModel","fromModel","_modelParentIdField","_isPageable","_shouldWrap","_push","operation","_readData","_getData","_data","newData","toJSON","_replaceData","sourceLength","_readAggregates","_aggregateResult","reader","aggregates","_defaultParentId","root","_removeChildData","_removeFromDataMaps","pageable","_getChildrenMap","items","_subtree","removedItems","_removeItems","insert","newModel","_insertInDataMaps","_filterCallback","item","_modelIdField","parentSubtree","_parentNode","unshift","parentNode","len","_observeView","_createTreeView","_initIdsMap","_idsMap","_getIdsMap","_getFilteredChildrenMap","filteredChildren","_setFilteredChildrenMap","_initDataMaps","_initChildrenMapForParent","_defaultTreeModelOptions","modelOptions","_modelOptions","_defaultDataItemType","ObservableObject","_calculateAggregates","subtree","pageableChildrenMap","aggregate","_queryProcess","hasLoadedChildren","_processPageableQuery","hasChildren","slice","_processTreeQuery","_replaceWithObservedData","_processDataItemsState","_replaceItemsInDataMaps","dataToAggregate","_dataToAggregate","_replaceInMapWithObservedData","firstDataItem","firstItemParents","_parentNodes","observableArray","directParent","viewIndex","itemType","_insertInIdsMap","_replaceInMap","replacement","itemInArray","itemIndex","dataToReplace","replacementArray","itemToReplace","itemToReplaceId","dataItemIndex","observableItem","_getById","at","key","_insertInChildrenMap","itemId","_removeFromIdsMap","_removeFromChildrenMap","_indexInChildrenMap","_itemIndexInMap","dataMap","uid","_defaultPageableQueryOptions","page","pageSize","_updateTotalForAction","action","_updateCollapsedTotalForAction","_collapsedTotal","serverPaging","_calculateCollapsedTotal","_setFilterTotal","filterTotal","setDefaultValue","_setFilterCollapsedTotal","serverFiltering","collapsedTotal","_dataWithoutCollapsedSubtrees","_removeCollapsedSubtrees","_processDataItemState","_queueRequest","callback","_modelLoaded","childNodes","_modelError","_error","success","requestParams","_observe","load","method","remote","serverSorting","serverGrouping","serverAggregates","defaultPromise","Deferred","resolve","promise","done","fail","contains","rootId","_byParentId","defaultId","current","defaults","_rootNode","_pageableRootNodes","nodesWithoutParentInView","node","_nodesWithoutParentInView","_parentNodesNotInView","parentInView","_parentInView","_pageableModelLevel","baseFilter","_pageableQueryOptions","_flatData","_modelCanceled","_changesCanceled","_syncEnd","Pager","name","totalPages","dataSource","_filter","ceil","_createDataSource","Observable","bind","events","_fields","_initContainer","createEditable","Editable","clearContainer","change","_isEditable","format","editor","end","close","empty","removeAttr","_attachHandlers","cycleForm","open","window","modal","resizable","draggable","title","visible","formContent","append","_appendTemplate","_appendFields","_appendButtons","Tree","render","appendTo","Window","form","unescape","class","fieldRenderer","commandRenderer","closeHandler","_cancelProxy","_cancel","on","_saveProxy","_save","userTriggered","_detachHandlers","off","trigger","center","_dataSource","_aria","_columns","_layout","_navigatable","_selectable","_sortable","_resizable","_filterable","_attachEvents","_toolbar","_scrollable","_reorderable","_columnMenu","_minScreenSupport","_draggable","_pageable","autoBind","fetch","_hasLockedColumns","widget","addClass","_resizeHandler","resize","notify","move","_dragging","HierarchicalDragAndDrop","$angular","autoScroll","itemSelector","allowedContainers","hintText","separator","join","destination","dest","src","itemFromTarget","tr","content","dragstart","drag","drop","removeClass","dragend","isPrevented","originalSrcParentId","originalSrcIndex","reorderable","dropHintContainer","dropPositionFrom","dropHint","itemFor","tbody","scrollables","lockedContent","touchScroller","scrollable","_wheelScroll","movable","_touchScroller","sender","x","y","delta","lockedDiv","ctrlKey","wheelDeltaY","currentTarget","scrollHeight","clientHeight","_progress","messages","_showStatus","_render","error","isCurrentInHeader","currentIndex","_cancelEditor","_adjustHeight","navigatable","_isActiveInTable","cellIndex","_restoreCurrent","_angularFooters","footer","allAggregates","footerRows","_footerItems","_angularFooter","angular","elements","col","_items","lockedTable","dataItems","n","tmp","message","_contentTree","_lockedContentTree","_hideStatus","show","isHeightSet","contentWrap","toolbar","pagerHeight","pager","scrollbar","css","initialHeight","newHeight","offsetWidth","clientWidth","_resize","_applyLockedContainersWidth","any","hideMinScreenCols","minScreenResizeHandler","minWidth","screenWidth","innerWidth","screen","minScreenWidth","hideColumn","showColumn","unbind","_refreshHandler","_errorHandler","_progressHandler","_navigatableTables","_current","_draggableInstance","_destroyEditor","_destroyPager","_autoExpandable","_dataSourceFetchProxy","lockedHeader","_statusTree","_headerTree","_lockedHeaderColsTree","_lockedContentColsTree","_lockedHeaderTree","sortable","columnMenu","noRows","requestFailed","commands","hierarchy","_toggle","expand","afterModelLoaded","_toggleData","_syncLockedContentHeight","_isIncellEditable","closeCell","always","_togglePageableData","queryOptions","_renderProgress","_refreshPager","collapse","_toggleChildren","event","tables","headerTables","touch","_tableClick","_tableFocus","_tableBlur","_tableKeyDown","td","lockedColumnOffset","active","rowIndex","newCurrent","_updateCurrentAttr","_scrollCurrent","_lastCellIndex","_setCurrent","tableContainer","isInLockedContainer","isInContent","scrollableContainer","_scrollTo","_relatedRow","elementToLowercase","tagName","toLowerCase","isHorizontal","elementOffset","elementOffsetDir","containerScroll","containerOffsetDir","bottomDistance","ieCorrection","firefoxCorrection","offsetLeft","mozilla","abs","_elementId","_currentDataIndex","lockedColumnsCount","_prevVerticalCell","_nextVerticalCell","tmpIndex","currentRowCells","hiddenColumns","_verticalContainer","up","step","floor","headerId","replace","handled","canHandle","isDefaultPrevented","keyCode","UP","_moveUp","shiftKey","DOWN","_moveDown","LEFT","RIGHT","altKey","_handleExpand","_moveRight","_handleCollapse","_moveLeft","PAGEDOWN","_handlePageDown","PAGEUP","_handlePageUp","ENTER","F2","_handleEnterKey","ESC","_handleEscKey","HOME","_handleHome","END","_handleEnd","TAB","_handleTabKey","stopPropagation","ctrl","prev","rowContainer","isInLockedTable","isInBody","currentTable","blur","cancelRow","first","version","document","body","has","focusable","click","_handleEditing","incellEditing","_tabNext","back","switchRow","nextAll","editContainer","isEdited","isIE","opera","triggerHandler","saveRow","isHeader","headerTable","isInput","setTimeout","_setTabIndex","icons","retryButton","_commandClick","_attachCellEditingEventHandlers","multiple","isLockedCell","clearTimeout","_closeCellTimeout","_commandByName","j","currentName","commandName","parentsUntil","_ensureExpandableColumn","expandableColumns","expandable","lockedCols","encoded","_columnTemplates","_columnAttributes","headerTemplate","convertStyle","properties","declaration","split","trim","camelCase","headerAttributes","layout","addBack","_initVirtualTrees","_renderCols","_renderHeader","_headerColsTree","_contentColsTree","buttons","_buildCommands","_lockedColumns","_nonLockedColumns","_templateColumns","_flushCache","maps","uidAttr","viewChildrenMap","_renderOptions","_dataToRender","_renderedModelLevel","select","_","_absoluteIndex","_angularItems","_clearRenderMap","buttonClass","_viewChildrenMap","_trs","editedColumn","editedColumnIndex","htmlEncode","contentResized","_muteAngularRebind","_togglePagerVisibility","toggle","progress","parentsNotInView","parentNotInView","parentNotInViewId","childId","parentsCopy","parentIndex","_markNodeAsNonRenderable","_skipRenderingMap","nodeId","_adjustRowsHeight","rows2","containers","containersLength","heights","_ths","cellClasses","headerContent","ths","href","data-field","data-title","role","_cols","_clearColsCache","_retrieveFirstColumn","_updateFirstColumnClass","_updateRowSpans","included","_setColumnDataIndexes","_updateColumnCellIndex","_setParentsVisibility","predicate","p","_prepareColumns","parentRow","childRow","totalColSpan","_renderHeaderTree","tree","hasMultiColumnHeaders","rowsToRender","_syncLockedHeaderHeight","lockedWidth","nonLockedWidth","wrapperWidth","modelId","_edit","_tds","_td","_hasFooterTemplate","data-parentId","_footerId","noop","c","renderer","editedColumnField","editColumn","iconClass","_cellContent","dirtyIndicator","_evalDirtyIndicatorTemplate","_evalColumnTemplate","_evalCustomColumnTemplate","templateSettings","_customTemplateSettings","columnTemplateAlias","paramName","templateString","_dirtyIndicatorTemplate","templateFunction","columnTemplate","dirtyIndicatorTemplate","dirtyField","charAt","expr","Template","_button","data-command","_positionResizeHandle","cellOffset","th","resizeHandle","cellWidth","clientX","indicatorWidth","columnResizeHandleWidth","left","top","val","autoFitColumn","contentTable","footerTable","oldColumnWidth","newColumnWidth","totalWidth","visibleLocked","oldWidth","newWidth","_adjustLockedHorizontalScrollBar","treelist","Resizable","handle","start","colSelector","startLocation","location","columnWidth","minColumnWidth","resizeend","sortableInstance","kendoColumnSorter","filterMenuInstance","filterInit","filterOpen","kendoFilterMenu","_change","_isLocked","useAllItems","multi","Selectable","parseOptions","aria","continuousItems","_continuousItems","relatedTarget","_selectableTarget","SPACEBAR","clear","_lastActive","selectRange","_firstSelectee","lockedItems","nonLockedItems","apply","related","clearSelection","ds","setDataSource","getByUid","_isPopupEditable","_editMode","_createEditor","_cancelEdit","args","sync","addRow","then","_insertAt","_firstEditableColumnIndex","removeRow","cancelChanges","mode","leafCols","_createIncellEditor","_editCell","editedCell","values","isCancel","ns","saveChanges","valid","_toggleColumnVisibility","_findColumn","_adjustTablesWidth","selector","Draggable","guid","hint","paddingLeft","paddingRight","lineHeight","paddingTop","paddingBottom","prepend","Reorderable","dragOverContainers","_allowDragOverContainers","inSameContainer","oldIndex","newIndex","reorderColumn","lockable","_reorderTrees","destSources","destContainer","destDomTree","sources","sourcesContainer","sourcesDomTree","destDomChildren","destRow","sourcesLeafs","destLeafs","reorderTaget","destThs","sourceDOM","sourceChildren","destColumn","_insertTree","leafs","domTr","_reorderHeader","rowsToAdd","sourcesDepth","targetDepth","sourceLocked","destLocked","destRows","destIndex","lockChanged","nonLockedColumnsLength","lockColumn","unlockColumn","menu","menuOptions","initHandler","_columnMenuInit","openHandler","_columnMenuOpen","lockedColumnsLength","compare","pane","owner","closeCallback","kendoColumnMenu","_createPager","alwaysVisible","ExcelMixin","PDFMixin","_drawPDF","allPages","startingPage","exportPage","doc","treeList","_drawPDFShadow","avoidLinks","pageNum","pageNumber","err","reject","paperSize","_drawPDF_autoPageBreak","_initPDFProgress","drawing","Group","deferred","progressBar","clone","kendoProgressBar","chunkCount","min","draw","cont","_destructive","drawDOM","renderPage","origBody","overflow","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.treelist.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.treelist', [\n        'kendo.dom',\n        'kendo.data',\n        'kendo.columnsorter',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.filtermenu',\n        'kendo.selectable',\n        'kendo.resizable',\n        'kendo.treeview.draganddrop',\n        'kendo.pager'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'treelist',\n        name: 'TreeList',\n        category: 'web',\n        description: 'The TreeList widget displays self-referencing data and offers rich support for interacting with data, sorting, filtering, and selection.',\n        depends: [\n            'dom',\n            'data',\n            'pager'\n        ],\n        features: [\n            {\n                id: 'treelist-sorting',\n                name: 'Sorting',\n                description: 'Support for column sorting',\n                depends: ['columnsorter']\n            },\n            {\n                id: 'treelist-filtering',\n                name: 'Filtering',\n                description: 'Support for record filtering',\n                depends: ['filtermenu']\n            },\n            {\n                id: 'treelist-editing',\n                name: 'Editing',\n                description: 'Support for record editing',\n                depends: [\n                    'editable',\n                    'window'\n                ]\n            },\n            {\n                id: 'treelist-selection',\n                name: 'Selection',\n                description: 'Support for row selection',\n                depends: ['selectable']\n            },\n            {\n                id: 'treelist-column-resize',\n                name: 'Column resizing',\n                description: 'Support for column resizing',\n                depends: ['resizable']\n            },\n            {\n                id: 'treelist-dragging',\n                name: 'Drag & Drop',\n                description: 'Support for drag & drop of rows',\n                depends: ['treeview.draganddrop']\n            },\n            {\n                id: 'treelist-excel-export',\n                name: 'Excel export',\n                description: 'Export data as Excel spreadsheet',\n                depends: ['excel']\n            },\n            {\n                id: 'treelist-pdf-export',\n                name: 'PDF export',\n                description: 'Export data as PDF',\n                depends: [\n                    'pdf',\n                    'drawing'\n                ]\n            },\n            {\n                id: 'treelist-paging',\n                name: 'Paging',\n                description: 'Support for treelist paging',\n                depends: ['pager']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var data = kendo.data;\n        var kendoDom = kendo.dom;\n        var kendoDomElement = kendoDom.element;\n        var kendoTextElement = kendoDom.text;\n        var kendoHtmlElement = kendoDom.html;\n        var outerWidth = kendo._outerWidth;\n        var keys = kendo.keys;\n        var outerHeight = kendo._outerHeight;\n        var ui = kendo.ui;\n        var DataBoundWidget = ui.DataBoundWidget;\n        var DataSource = data.DataSource;\n        var ObservableArray = data.ObservableArray;\n        var Query = data.Query;\n        var Model = data.Model;\n        var browser = kendo.support.browser;\n        var kendoTemplate = kendo.template;\n        var activeElement = kendo._activeElement;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var proxy = $.proxy;\n        var map = $.map;\n        var grep = $.grep;\n        var inArray = $.inArray;\n        var isPlainObject = $.isPlainObject;\n        var push = Array.prototype.push;\n        var STRING = 'string';\n        var CHANGE = 'change';\n        var ITEM_CHANGE = 'itemChange';\n        var ERROR = 'error';\n        var PROGRESS = 'progress';\n        var DOT = '.';\n        var NS = '.kendoTreeList';\n        var CLICK = 'click';\n        var MOUSEDOWN = 'mousedown';\n        var BEFORE_EDIT = 'beforeEdit';\n        var EDIT = 'edit';\n        var PAGE = 'page';\n        var PAGE_CHANGE = 'pageChange';\n        var SAVE = 'save';\n        var SAVE_CHANGES = 'saveChanges';\n        var EXPAND = 'expand';\n        var COLLAPSE = 'collapse';\n        var CELL_CLOSE = 'cellClose';\n        var REMOVE = 'remove';\n        var DATA_CELL = 'td:not(.k-group-cell):not(.k-hierarchy-cell):visible';\n        var DATABINDING = 'dataBinding';\n        var DATABOUND = 'dataBound';\n        var CANCEL = 'cancel';\n        var TABINDEX = 'tabIndex';\n        var FILTERMENUINIT = 'filterMenuInit';\n        var FILTERMENUOPEN = 'filterMenuOpen';\n        var COLUMNHIDE = 'columnHide';\n        var COLUMNSHOW = 'columnShow';\n        var HEADERCELLS = 'th.k-header';\n        var COLUMNREORDER = 'columnReorder';\n        var COLUMNRESIZE = 'columnResize';\n        var COLUMNMENUINIT = 'columnMenuInit';\n        var COLUMNMENUOPEN = 'columnMenuOpen';\n        var COLUMNLOCK = 'columnLock';\n        var COLUMNUNLOCK = 'columnUnlock';\n        var PARENTIDFIELD = 'parentId';\n        var DRAGSTART = 'dragstart';\n        var DRAG = 'drag';\n        var DROP = 'drop';\n        var DRAGEND = 'dragend';\n        var NAVROW = 'tr:visible';\n        var NAVCELL = 'td:visible';\n        var NAVHEADER = 'th:visible';\n        var ITEMROW = 'tr:not(.k-footer-template):visible';\n        var FIRSTNAVITEM = NAVROW + ' > td:first:visible';\n        var LASTITEMROW = ITEMROW + ':last';\n        var isRtl = false;\n        var HEIGHT = 'height';\n        var INCELL = 'incell';\n        var POPUP = 'popup';\n        var TABLE = 'table';\n        var classNames = {\n            wrapper: 'k-treelist k-grid k-widget k-display-block',\n            header: 'k-header',\n            button: 'k-button',\n            alt: 'k-alt',\n            editCell: 'k-edit-cell',\n            editRow: 'k-grid-edit-row',\n            dirtyCell: 'k-dirty-cell',\n            group: 'k-treelist-group',\n            gridToolbar: 'k-grid-toolbar',\n            gridHeader: 'k-grid-header',\n            gridHeaderWrap: 'k-grid-header-wrap',\n            gridContent: 'k-grid-content',\n            gridContentWrap: 'k-grid-content',\n            gridFilter: 'k-grid-filter',\n            footerTemplate: 'k-footer-template',\n            focused: 'k-state-focused',\n            loading: 'k-i-loading',\n            refresh: 'k-i-reload',\n            retry: 'k-request-retry',\n            selected: 'k-state-selected',\n            status: 'k-status',\n            link: 'k-link',\n            withIcon: 'k-with-icon',\n            filterable: 'k-filterable',\n            icon: 'k-icon',\n            iconFilter: 'k-i-filter',\n            iconCollapse: 'k-i-collapse',\n            iconExpand: 'k-i-expand',\n            iconHidden: 'k-i-none',\n            iconPlaceHolder: 'k-icon k-i-none',\n            input: 'k-input',\n            dropPositions: 'k-i-insert-up k-i-insert-down k-i-plus k-i-insert-middle',\n            dropTop: 'k-i-insert-up',\n            dropBottom: 'k-i-insert-down',\n            dropAdd: 'k-i-plus',\n            dropMiddle: 'k-i-insert-middle',\n            dropDenied: 'k-i-cancel',\n            dragStatus: 'k-drag-status',\n            dragClue: 'k-drag-clue',\n            dragClueText: 'k-clue-text'\n        };\n        var defaultCommands = {\n            create: {\n                imageClass: 'k-i-plus',\n                className: 'k-grid-add',\n                methodName: 'addRow'\n            },\n            createchild: {\n                imageClass: 'k-i-plus',\n                className: 'k-grid-add',\n                methodName: 'addRow'\n            },\n            destroy: {\n                imageClass: 'k-i-close',\n                className: 'k-grid-delete',\n                methodName: 'removeRow'\n            },\n            edit: {\n                imageClass: 'k-i-edit',\n                className: 'k-grid-edit',\n                methodName: 'editRow'\n            },\n            update: {\n                imageClass: 'k-i-check',\n                className: 'k-primary k-grid-update',\n                methodName: 'saveRow'\n            },\n            canceledit: {\n                imageClass: 'k-i-cancel',\n                className: 'k-grid-cancel',\n                methodName: '_cancelEdit'\n            },\n            cancel: {\n                imageClass: 'k-icon k-i-cancel',\n                text: 'Cancel changes',\n                className: 'k-grid-cancel-changes',\n                methodName: 'cancelChanges'\n            },\n            save: {\n                imageClass: 'k-icon k-i-check',\n                text: 'Save changes',\n                className: 'k-grid-save-changes',\n                methodName: 'saveChanges'\n            },\n            excel: {\n                imageClass: 'k-i-file-excel',\n                className: 'k-grid-excel',\n                methodName: 'saveAsExcel'\n            },\n            pdf: {\n                imageClass: 'k-i-file-pdf',\n                className: 'k-grid-pdf',\n                methodName: 'saveAsPDF'\n            }\n        };\n        var TreeView = kendo.Class.extend({\n            init: function (data, options) {\n                var that = this;\n                that.data = data || [];\n                that.options = extend(that.options, options);\n            },\n            options: {\n                defaultParentId: null,\n                idField: 'id',\n                parentIdField: PARENTIDFIELD\n            },\n            childrenMap: function () {\n                var that = this;\n                var childrenMap = {};\n                var dataLength = that.data.length;\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                var idField = that.options.idField;\n                var parentIdField = that.options.parentIdField;\n                if (that._childrenMap) {\n                    return that._childrenMap;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = this.data[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    childrenMap[dataItemId] = childrenMap[dataItemId] || [];\n                    childrenMap[dataItemParentId] = childrenMap[dataItemParentId] || [];\n                    childrenMap[dataItemParentId].push(dataItem);\n                }\n                that._childrenMap = childrenMap;\n                return childrenMap;\n            },\n            idsMap: function () {\n                var that = this;\n                var idsMap = {};\n                var data = that.data;\n                var dataLength = data.length;\n                var dataItem;\n                var idField = that.options.idField;\n                if (that._idMap) {\n                    return that._idMap;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    idsMap[dataItem[idField]] = dataItem;\n                }\n                that.idsMap = idsMap;\n                return idsMap;\n            },\n            dataMaps: function () {\n                var that = this;\n                var childrenMap = {};\n                var data = that.data;\n                var dataLength = data.length;\n                var idsMap = {};\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                var idField = that.options.idField;\n                var parentIdField = that.options.parentIdField;\n                if (that._dataMaps) {\n                    return that._dataMaps;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    idsMap[dataItemId] = dataItem;\n                    childrenMap[dataItemId] = childrenMap[dataItemId] || [];\n                    childrenMap[dataItemParentId] = childrenMap[dataItemParentId] || [];\n                    childrenMap[dataItemParentId].push(dataItem);\n                }\n                that._dataMaps = {\n                    children: childrenMap,\n                    ids: idsMap\n                };\n                return that._dataMaps;\n            },\n            rootNodes: function () {\n                var that = this;\n                var data = that.data;\n                var defaultParentId = that.options.defaultParentId;\n                var dataLength = data.length;\n                var rootNodes = [];\n                var dataItem;\n                var parentIdField = that.options.parentIdField;\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    if (dataItem[parentIdField] === defaultParentId) {\n                        rootNodes.push(dataItem);\n                    }\n                }\n                return rootNodes;\n            },\n            removeCollapsedSubtreesFromRootNodes: function (options) {\n                options = options || {};\n                var that = this;\n                var rootNodes = that.rootNodes();\n                var result = [];\n                var prunedTree;\n                that._childrenMap = options.childrenMap = options.childrenMap || that.childrenMap();\n                options.maxDepth = options.maxDepth || Infinity;\n                for (var i = 0; i < rootNodes.length; i++) {\n                    prunedTree = that.removeCollapsedSubtrees(rootNodes[i], options);\n                    result = result.concat(prunedTree);\n                }\n                return result;\n            },\n            removeCollapsedSubtrees: function (rootNode, options) {\n                options = options || {};\n                var that = this;\n                var result = [];\n                var childIdx;\n                var prunedTree;\n                var childrenMap = options.childrenMap || {};\n                var maxDepth = options.maxDepth || Infinity;\n                var idField = that.options.idField;\n                var children = childrenMap[rootNode[idField]] || [];\n                var expanded = isUndefined(rootNode.expanded) ? options.expanded : rootNode.expanded;\n                result.push(rootNode);\n                if (children && expanded) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (result.length >= maxDepth) {\n                            break;\n                        }\n                        prunedTree = that.removeCollapsedSubtrees(children[childIdx], options);\n                        result = result.concat(prunedTree);\n                    }\n                }\n                return result;\n            }\n        });\n        var TreeQuery = function (data) {\n            this.data = data || [];\n        };\n        TreeQuery.prototype = new Query();\n        TreeQuery.prototype.constructor = TreeQuery;\n        TreeQuery.process = function (data, options, inPlace) {\n            options = options || {};\n            var query = new TreeQuery(data);\n            var group = options.group;\n            var sort = Query.normalizeGroup(group || []).concat(Query.normalizeSort(options.sort || []));\n            var filterCallback = options.filterCallback;\n            var filter = options.filter;\n            var skip = options.skip;\n            var take = options.take;\n            var total;\n            var childrenMap;\n            var filteredChildrenMap;\n            var view;\n            var prunedData;\n            if (sort && inPlace) {\n                query = query.sort(sort, undefined, undefined, inPlace);\n            }\n            if (filter) {\n                query = query.filter(filter);\n                if (filterCallback) {\n                    query = filterCallback(query);\n                }\n                total = query.toArray().length;\n            }\n            if (sort && !inPlace) {\n                query = query.sort(sort);\n                if (group) {\n                    data = query.toArray();\n                }\n            }\n            if (options.processFromRootNodes) {\n                view = new TreeView(query.toArray(), options);\n                if (filter) {\n                    filteredChildrenMap = view.childrenMap();\n                }\n                prunedData = view.removeCollapsedSubtreesFromRootNodes({\n                    childrenMap: filter || sort && sort.length ? undefined : options.childrenMap,\n                    expanded: options.expanded,\n                    maxDepth: skip + take || Infinity\n                });\n                childrenMap = view.childrenMap();\n                query = new TreeQuery(prunedData);\n            }\n            if (skip !== undefined && take !== undefined) {\n                query = query.range(skip, take);\n            }\n            if (group) {\n                query = query.group(group, data);\n            }\n            return {\n                total: total,\n                data: query.toArray(),\n                childrenMap: childrenMap,\n                filteredChildrenMap: filteredChildrenMap\n            };\n        };\n        var TreeListModel = Model.define({\n            id: 'id',\n            parentId: PARENTIDFIELD,\n            fields: {\n                id: { type: 'number' },\n                parentId: {\n                    type: 'number',\n                    nullable: true\n                }\n            },\n            init: function (value) {\n                Model.fn.init.call(this, value);\n                this._loaded = false;\n                if (!this.parentIdField) {\n                    this.parentIdField = PARENTIDFIELD;\n                }\n                this.parentId = this.get(this.parentIdField);\n            },\n            accept: function (data) {\n                Model.fn.accept.call(this, data);\n                this.parentId = this.get(this.parentIdField);\n            },\n            set: function (field, value, initiator) {\n                if (field == PARENTIDFIELD && this.parentIdField != PARENTIDFIELD) {\n                    this[this.parentIdField] = value;\n                }\n                Model.fn.set.call(this, field, value, initiator);\n                if (field == this.parentIdField) {\n                    this.parentId = this.get(this.parentIdField);\n                }\n            },\n            loaded: function (value) {\n                if (value !== undefined) {\n                    this._loaded = value;\n                } else {\n                    return this._loaded;\n                }\n            },\n            shouldSerialize: function (field) {\n                return Model.fn.shouldSerialize.call(this, field) && field !== '_loaded' && field != '_error' && field != '_edit' && !(this.parentIdField !== 'parentId' && field === 'parentId');\n            }\n        });\n        TreeListModel.parentIdField = PARENTIDFIELD;\n        TreeListModel.define = function (base, options) {\n            if (options === undefined) {\n                options = base;\n                base = TreeListModel;\n            }\n            var parentId = options.parentId || PARENTIDFIELD;\n            options.parentIdField = parentId;\n            var model = Model.define(base, options);\n            if (parentId) {\n                model.parentIdField = parentId;\n            }\n            return model;\n        };\n        function is(field) {\n            return function (object) {\n                return object[field];\n            };\n        }\n        function not(func) {\n            return function (object) {\n                return !func(object);\n            };\n        }\n        var TreeListDataSource = DataSource.extend({\n            init: function (options) {\n                options = options || {};\n                var that = this;\n                that._dataMaps = that._getDataMaps();\n                options.schema = extend(true, {}, {\n                    modelBase: TreeListModel,\n                    model: TreeListModel\n                }, options.schema);\n                DataSource.fn.init.call(this, options);\n            },\n            _addRange: function () {\n            },\n            _createNewModel: function (data) {\n                var that = this;\n                var model = {};\n                var fromModel = data instanceof Model;\n                var parentIdField = this._modelParentIdField();\n                if (fromModel) {\n                    model = data;\n                }\n                model = DataSource.fn._createNewModel.call(this, model);\n                if (!fromModel) {\n                    if (data.parentId) {\n                        data[model.parentIdField] = data.parentId;\n                    } else if (that._isPageable() && data[parentIdField]) {\n                        data[model.parentIdField] = data[parentIdField];\n                    }\n                    model.accept(data);\n                }\n                return model;\n            },\n            _shouldWrap: function () {\n                return true;\n            },\n            _push: function (result, operation) {\n                var data = DataSource.fn._readData.call(this, result);\n                if (!data) {\n                    data = result;\n                }\n                this[operation](data);\n            },\n            _getData: function () {\n                return this._data || [];\n            },\n            _readData: function (newData) {\n                var that = this;\n                var data = that._isPageable() ? that._getData().toJSON() : that.data();\n                newData = DataSource.fn._readData.call(this, newData);\n                this._replaceData((data.toJSON ? data.toJSON() : data).concat(newData), data);\n                if (newData instanceof ObservableArray) {\n                    return newData;\n                }\n                return data;\n            },\n            _replaceData: function (source, target) {\n                var sourceLength = source.length;\n                for (var i = 0; i < sourceLength; i++) {\n                    target[i] = source[i];\n                }\n                target.length = sourceLength;\n            },\n            _readAggregates: function (data) {\n                var result = extend(this._aggregateResult, this.reader.aggregates(data));\n                if ('' in result) {\n                    result[this._defaultParentId()] = result[''];\n                    delete result[''];\n                }\n                return result;\n            },\n            remove: function (root) {\n                this._removeChildData(root);\n                this._removeFromDataMaps(root);\n                DataSource.fn.remove.call(this, root);\n            },\n            _removeChildData: function (model) {\n                var that = this;\n                var pageable = that._isPageable();\n                var data = pageable ? this._getData() : this.data();\n                var childrenMap = pageable ? that._getChildrenMap() || that.childrenMap(data) : that._childrenMap(data);\n                var items = this._subtree(childrenMap, model.id);\n                var removedItems = this._removeItems(items, false);\n                that._removeFromDataMaps(removedItems);\n            },\n            insert: function (index, model) {\n                var that = this;\n                var newModel = that._createNewModel(model);\n                that._insertInDataMaps(newModel);\n                return DataSource.fn.insert.call(that, index, newModel);\n            },\n            _filterCallback: function (query) {\n                var that = this;\n                var i, item;\n                var map = {};\n                var result = [];\n                var data = query.toArray();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var pageable = that._isPageable();\n                var parentSubtree = [];\n                var parent;\n                for (i = 0; i < data.length; i++) {\n                    item = data[i];\n                    if (pageable) {\n                        parentSubtree = [];\n                        if (!map[item[idField]]) {\n                            map[item[idField]] = true;\n                            parentSubtree.push(item);\n                        }\n                        parent = that._parentNode(item);\n                        while (parent) {\n                            if (!map[parent[idField]]) {\n                                map[parent[idField]] = true;\n                                parentSubtree.unshift(parent);\n                                parent = that._parentNode(parent);\n                            } else {\n                                break;\n                            }\n                        }\n                        if (parentSubtree.length) {\n                            result = result.concat(parentSubtree);\n                        }\n                    } else {\n                        while (item) {\n                            if (!map[item[idField]]) {\n                                map[item[idField]] = true;\n                                result.push(item);\n                            }\n                            if (!map[item[parentIdField]]) {\n                                map[item[parentIdField]] = true;\n                                item = this.parentNode(item);\n                                if (item) {\n                                    result.push(item);\n                                }\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                }\n                return new Query(result);\n            },\n            _subtree: function (map, id) {\n                var that = this;\n                var result = map[id] || [];\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                for (var i = 0, len = result.length; i < len; i++) {\n                    if (result[i][idField] !== defaultParentId) {\n                        result = result.concat(that._subtree(map, result[i][idField]));\n                    }\n                }\n                return result;\n            },\n            _childrenMap: function (data) {\n                var map = {};\n                var i, item, id, parentId;\n                data = this._observeView(data);\n                for (i = 0; i < data.length; i++) {\n                    item = data[i];\n                    id = item.id;\n                    parentId = item.parentId;\n                    map[id] = map[id] || [];\n                    map[parentId] = map[parentId] || [];\n                    map[parentId].push(item);\n                }\n                return map;\n            },\n            childrenMap: function (data) {\n                var view = this._createTreeView(data);\n                var map = view.childrenMap();\n                return map;\n            },\n            _getChildrenMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.children;\n            },\n            _initIdsMap: function (data) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                if (isUndefined(dataMaps.ids)) {\n                    dataMaps.ids = that._idsMap(data);\n                }\n                return dataMaps.ids;\n            },\n            _idsMap: function (data) {\n                var view = this._createTreeView(data);\n                var map = view.idsMap();\n                return map;\n            },\n            _getIdsMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.ids || {};\n            },\n            _getFilteredChildrenMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.filteredChildren;\n            },\n            _setFilteredChildrenMap: function (map) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                dataMaps.filteredChildren = map;\n            },\n            _initDataMaps: function (data) {\n                var that = this;\n                var view = that._createTreeView(data);\n                that._dataMaps = view.dataMaps();\n                return that._dataMaps;\n            },\n            _initChildrenMapForParent: function (parent) {\n                var that = this;\n                var data = that._getData();\n                var childrenMap = that._getChildrenMap();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var parentId = parent[idField];\n                if (childrenMap) {\n                    childrenMap[parentId] = [];\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i][parentIdField] === parentId) {\n                            childrenMap[parentId].push(data[i]);\n                        }\n                    }\n                }\n            },\n            _getDataMaps: function () {\n                var that = this;\n                that._dataMaps = that._dataMaps || {};\n                return that._dataMaps;\n            },\n            _createTreeView: function (data, options) {\n                var view = new TreeView(data, extend(options, this._defaultTreeModelOptions()));\n                return view;\n            },\n            _defaultTreeModelOptions: function () {\n                var that = this;\n                var modelOptions = that._modelOptions();\n                return {\n                    defaultParentId: that._defaultParentId(),\n                    idField: that._modelIdField(),\n                    parentIdField: that._modelParentIdField(),\n                    expanded: modelOptions.expanded\n                };\n            },\n            _defaultDataItemType: function () {\n                return this.reader.model || kendo.data.ObservableObject;\n            },\n            _calculateAggregates: function (data, options) {\n                options = options || {};\n                var that = this;\n                var result = {};\n                var item, subtree, i;\n                var filter = options.filter;\n                var skip = options.skip;\n                var take = options.take;\n                var maxDepth = !isUndefined(skip) && !isUndefined(take) ? skip + take : Infinity;\n                var pageable = that._isPageable();\n                var filteredChildrenMap = options.filteredChildrenMap;\n                var childrenMap = options.childrenMap;\n                var pageableChildrenMap;\n                if (pageable) {\n                    if (isUndefined(options.aggregate)) {\n                        return result;\n                    }\n                    if (filteredChildrenMap) {\n                        pageableChildrenMap = filteredChildrenMap;\n                    } else if (childrenMap) {\n                        pageableChildrenMap = childrenMap;\n                    } else {\n                        pageableChildrenMap = that.childrenMap(that._getData());\n                    }\n                }\n                if (!pageable && filter) {\n                    data = Query.process(data, {\n                        filter: filter,\n                        filterCallback: proxy(this._filterCallback, this)\n                    }).data;\n                }\n                var map = pageable ? pageableChildrenMap : that._childrenMap(data);\n                result[this._defaultParentId()] = new Query(this._subtree(map, this._defaultParentId())).aggregate(options.aggregate);\n                for (i = 0; i < data.length; i++) {\n                    if (i >= maxDepth) {\n                        break;\n                    }\n                    item = data[i];\n                    subtree = this._subtree(map, item.id);\n                    result[item.id] = new Query(subtree).aggregate(options.aggregate);\n                }\n                return result;\n            },\n            _queryProcess: function (data, options) {\n                var that = this;\n                var result = {};\n                options = options || {};\n                options.filterCallback = proxy(this._filterCallback, this);\n                if (that._isPageable()) {\n                    return that._processPageableQuery(data, options);\n                } else {\n                    var defaultParentId = this._defaultParentId();\n                    result = Query.process(data, options);\n                    var map = this._childrenMap(result.data);\n                    var hasLoadedChildren, i, item, children;\n                    data = map[defaultParentId] || [];\n                    for (i = 0; i < data.length; i++) {\n                        item = data[i];\n                        if (item.id === defaultParentId) {\n                            continue;\n                        }\n                        children = map[item.id];\n                        hasLoadedChildren = !!(children && children.length);\n                        if (!item.loaded()) {\n                            item.loaded(hasLoadedChildren || !item.hasChildren);\n                        }\n                        if (item.loaded() || item.hasChildren !== true) {\n                            item.hasChildren = hasLoadedChildren;\n                        }\n                        if (hasLoadedChildren) {\n                            data = data.slice(0, i + 1).concat(children, data.slice(i + 1));\n                        }\n                    }\n                    result.data = data;\n                }\n                return result;\n            },\n            _processPageableQuery: function (data, options) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                var result;\n                var filteredChildrenMap;\n                if (that._getData() !== data || !dataMaps.children || !dataMaps.ids) {\n                    dataMaps = that._initDataMaps(that._getData());\n                }\n                options.childrenMap = dataMaps.children || {};\n                options.idsMap = dataMaps.ids || {};\n                result = that._processTreeQuery(data, options);\n                that._replaceWithObservedData(result.data, data);\n                that._processDataItemsState(result.data, result.childrenMap);\n                that._replaceItemsInDataMaps(result.data);\n                result.dataToAggregate = that._dataToAggregate(result.data, options);\n                if (options.filter) {\n                    filteredChildrenMap = result.filteredChildrenMap;\n                    that._replaceInMapWithObservedData(filteredChildrenMap, data);\n                    that._setFilteredChildrenMap(filteredChildrenMap);\n                    options.filteredChildrenMap = filteredChildrenMap;\n                }\n                return result;\n            },\n            _dataToAggregate: function (data) {\n                var that = this;\n                var firstDataItem = data[0] || {};\n                var firstItemParents = that._parentNodes(firstDataItem);\n                var dataToAggregate = firstItemParents.concat(data);\n                return dataToAggregate;\n            },\n            _replaceItemsInDataMaps: function (observableArray) {\n                var that = this;\n                var view = isArray(observableArray) ? observableArray : [observableArray];\n                var itemType = that._defaultDataItemType();\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var dataMaps = that._getDataMaps();\n                var item;\n                var parents;\n                var directParent;\n                for (var viewIndex = 0; viewIndex < view.length; viewIndex++) {\n                    item = view[viewIndex];\n                    if (!(item instanceof itemType)) {\n                        continue;\n                    }\n                    that._insertInIdsMap(item);\n                    parents = that._parentNodes(item);\n                    directParent = parents && parents.length ? parents[parents.length - 1] : undefined;\n                    if (item[parentIdField] === defaultParentId) {\n                        that._replaceInMap(dataMaps.children, defaultParentId, item, itemType);\n                    } else if (directParent) {\n                        that._replaceInMap(dataMaps.children, directParent[idField], item, itemType);\n                    }\n                }\n            },\n            _replaceInMap: function (map, id, replacement, itemType) {\n                var idField = this._modelIdField();\n                map[id] = map[id] || [];\n                itemType = itemType || this._defaultDataItemType();\n                var itemInArray = map[id].filter(function (element) {\n                    return replacement[idField] === element[idField];\n                })[0];\n                var itemIndex = itemInArray ? map[id].indexOf(itemInArray) : -1;\n                if (itemIndex !== -1 && !(itemInArray instanceof itemType)) {\n                    map[id][itemIndex] = replacement;\n                }\n            },\n            _replaceWithObservedData: function (dataToReplace, replacementArray) {\n                var that = this;\n                var idsMap = that._getDataMaps().ids || {};\n                var idField = that._modelIdField();\n                var itemType = that._defaultDataItemType();\n                var itemToReplace;\n                var itemToReplaceId;\n                var dataItem;\n                var dataItemIndex;\n                var observableItem;\n                for (var i = 0; i < dataToReplace.length; i++) {\n                    itemToReplace = dataToReplace[i];\n                    itemToReplaceId = itemToReplace[idField];\n                    if (!(itemToReplace instanceof itemType)) {\n                        if (!(idsMap[itemToReplaceId] instanceof itemType)) {\n                            dataItem = that._getById(itemToReplaceId);\n                            dataItemIndex = replacementArray.indexOf(dataItem);\n                            if (dataItem && dataItemIndex !== -1) {\n                                observableItem = replacementArray.at(dataItemIndex);\n                                dataToReplace[i] = observableItem;\n                            }\n                        } else {\n                            dataToReplace[i] = idsMap[itemToReplaceId];\n                        }\n                    }\n                }\n            },\n            _replaceInMapWithObservedData: function (map, replacementArray) {\n                var that = this;\n                for (var key in map) {\n                    that._replaceWithObservedData(map[key], replacementArray);\n                }\n            },\n            _insertInDataMaps: function (item) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._insertInIdsMap(item);\n                    that._insertInChildrenMap(item);\n                }\n            },\n            _insertInIdsMap: function (item) {\n                var that = this;\n                var idsMap = that._getIdsMap();\n                var idField = that._modelIdField();\n                if (!isUndefined(item[idField])) {\n                    idsMap[item[idField]] = item;\n                }\n            },\n            _insertInChildrenMap: function (item, index) {\n                var that = this;\n                var childrenMap = that._getChildrenMap() || {};\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var itemId = item[idField];\n                var parentId = item[parentIdField];\n                index = index || 0;\n                childrenMap[itemId] = childrenMap[itemId] || [];\n                childrenMap[parentId] = childrenMap[parentId] || [];\n                childrenMap[parentId].splice(index, 0, item);\n            },\n            _removeFromDataMaps: function (items) {\n                var that = this;\n                items = isArray(items) ? items : [items];\n                if (that._isPageable()) {\n                    for (var i = 0; i < items.length; i++) {\n                        that._removeFromIdsMap(items[i]);\n                        that._removeFromChildrenMap(items[i]);\n                    }\n                }\n            },\n            _removeFromIdsMap: function (item) {\n                var that = this;\n                var idsMap = that._getIdsMap();\n                var idField = that._modelIdField();\n                if (!isUndefined(item[idField])) {\n                    idsMap[item[idField]] = undefined;\n                }\n            },\n            _removeFromChildrenMap: function (item) {\n                var that = this;\n                var childrenMap = that._getChildrenMap() || {};\n                var parentIdField = that._modelParentIdField();\n                var parentId = item[parentIdField];\n                childrenMap[parentId] = childrenMap[parentId] || [];\n                var itemIndex = that._indexInChildrenMap(item);\n                if (itemIndex !== -1) {\n                    childrenMap[parentId].splice(itemIndex, 1);\n                }\n            },\n            _indexInChildrenMap: function (item) {\n                var that = this;\n                return that._itemIndexInMap(item, that._getChildrenMap());\n            },\n            _itemIndexInMap: function (item, dataMap) {\n                var that = this;\n                var map = dataMap || {};\n                var parentIdField = that._modelParentIdField();\n                var parentId = item[parentIdField];\n                map[parentId] = map[parentId] || [];\n                var itemInArray = map[parentId].filter(function (element) {\n                    return item.uid === element.uid;\n                })[0];\n                var itemIndex = itemInArray ? map[parentId].indexOf(itemInArray) : -1;\n                return itemIndex;\n            },\n            _getById: function (id) {\n                var that = this;\n                var idField = that._modelIdField();\n                var data = that._getData();\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i][idField] === id) {\n                        return data[i];\n                    }\n                }\n            },\n            _defaultPageableQueryOptions: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                var options = {\n                    skip: that.skip(),\n                    take: that.take(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    filterCallback: proxy(that._filterCallback, that),\n                    childrenMap: dataMaps.children,\n                    idsMap: dataMaps.ids\n                };\n                return options;\n            },\n            _isPageable: function () {\n                var pageSize = this.pageSize();\n                return !isUndefined(pageSize) && pageSize > 0;\n            },\n            _updateTotalForAction: function (action, items) {\n                var that = this;\n                DataSource.fn._updateTotalForAction.call(that, action, items);\n                if (that._isPageable()) {\n                    that._updateCollapsedTotalForAction(action, items);\n                }\n            },\n            _updateCollapsedTotalForAction: function (action, items) {\n                var that = this;\n                var total = parseInt(that._collapsedTotal, 10);\n                if (!isNumber(that._collapsedTotal)) {\n                    that._calculateCollapsedTotal();\n                    return;\n                }\n                if (action === 'add') {\n                    total += items.length;\n                } else if (action === 'remove') {\n                    total -= items.length;\n                } else if (action !== 'itemchange' && action !== 'sync' && !that.options.serverPaging) {\n                    total = that._calculateCollapsedTotal();\n                } else if (action === 'sync') {\n                    total = that._calculateCollapsedTotal();\n                }\n                that._collapsedTotal = total;\n            },\n            _setFilterTotal: function (filterTotal, setDefaultValue) {\n                var that = this;\n                DataSource.fn._setFilterTotal.call(that, filterTotal, setDefaultValue);\n                that._setFilterCollapsedTotal(filterTotal);\n            },\n            _setFilterCollapsedTotal: function (filterTotal) {\n                var that = this;\n                if (!that.options.serverFiltering) {\n                    if (filterTotal !== undefined) {\n                        that._collapsedTotal = filterTotal;\n                    } else {\n                        if (that._getFilteredChildrenMap()) {\n                            that._calculateCollapsedTotal();\n                        }\n                        that._setFilteredChildrenMap(undefined);\n                    }\n                }\n            },\n            collapsedTotal: function () {\n                var that = this;\n                if (!isUndefined(that._collapsedTotal)) {\n                    return that._collapsedTotal;\n                }\n                return that._calculateCollapsedTotal();\n            },\n            _calculateCollapsedTotal: function () {\n                var that = this;\n                var data = that._dataWithoutCollapsedSubtrees();\n                if (data.length) {\n                    that._collapsedTotal = data.length;\n                }\n                return that._collapsedTotal;\n            },\n            _dataWithoutCollapsedSubtrees: function () {\n                return this._removeCollapsedSubtrees(this._getData());\n            },\n            _removeCollapsedSubtrees: function (data) {\n                var that = this;\n                var view = that._createTreeView(data);\n                var result = view.removeCollapsedSubtreesFromRootNodes({\n                    expanded: that._modelOptions().expanded,\n                    childrenMap: that._getChildrenMap()\n                });\n                return result;\n            },\n            _processTreeQuery: function (data, options) {\n                var result = TreeQuery.process(data, extend(options, this._defaultTreeModelOptions(), { processFromRootNodes: true }));\n                return result;\n            },\n            _processDataItemsState: function (data, childrenMap) {\n                var dataLength = data.length;\n                var i;\n                for (i = 0; i < dataLength; i++) {\n                    this._processDataItemState(data[i], childrenMap);\n                }\n            },\n            _processDataItemState: function (dataItem, childrenMap) {\n                var defaultParentId = this._defaultParentId();\n                if (dataItem.id === defaultParentId) {\n                    return;\n                }\n                var children = childrenMap[dataItem.id] || [];\n                var hasLoadedChildren = !!(children && children.length);\n                if (!dataItem.loaded) {\n                    return;\n                }\n                if (!dataItem.loaded()) {\n                    dataItem.loaded(hasLoadedChildren || !dataItem.hasChildren);\n                }\n                if (dataItem.loaded() || dataItem.hasChildren !== true) {\n                    dataItem.hasChildren = hasLoadedChildren;\n                }\n            },\n            _queueRequest: function (options, callback) {\n                callback.call(this);\n            },\n            _modelLoaded: function (id) {\n                var model = this.get(id);\n                model.loaded(true);\n                model.hasChildren = this.childNodes(model).length > 0;\n            },\n            _modelError: function (id, e) {\n                this.get(id)._error = e;\n            },\n            success: function (data, requestParams) {\n                if (!requestParams || typeof requestParams.id == 'undefined') {\n                    this._data = this._observe([]);\n                }\n                return DataSource.fn.success.call(this, data, requestParams);\n            },\n            load: function (model) {\n                var method = '_query';\n                var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n                var defaultPromise = $.Deferred().resolve().promise();\n                if (model.loaded()) {\n                    if (remote) {\n                        return defaultPromise;\n                    }\n                } else if (model.hasChildren) {\n                    method = 'read';\n                    this._removeChildData(model);\n                }\n                return this[method]({ id: model.id }).done(proxy(this._modelLoaded, this, model.id)).fail(proxy(this._modelError, this, model.id));\n            },\n            contains: function (root, child) {\n                var that = this;\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var rootId = root[idField];\n                var pageable = that._isPageable();\n                while (child) {\n                    if (child[parentIdField] === rootId) {\n                        return true;\n                    }\n                    child = pageable ? that._parentNode(child) : that.parentNode(child);\n                }\n                return false;\n            },\n            _byParentId: function (id, defaultId) {\n                var result = [];\n                var view = this.view();\n                var current;\n                if (id === defaultId) {\n                    return [];\n                }\n                for (var i = 0; i < view.length; i++) {\n                    current = view.at(i);\n                    if (current.parentId == id) {\n                        result.push(current);\n                    }\n                }\n                return result;\n            },\n            _defaultParentId: function () {\n                return this.reader.model.fn.defaults[this.reader.model.parentIdField];\n            },\n            _modelOptions: function () {\n                var modelOptions = (this.options.schema || {}).model || {};\n                return modelOptions;\n            },\n            _modelIdField: function () {\n                var modelOptions = this._modelOptions();\n                return modelOptions.id || 'id';\n            },\n            _modelParentIdField: function () {\n                var modelOptions = this._modelOptions();\n                return modelOptions.parentId || PARENTIDFIELD;\n            },\n            childNodes: function (model) {\n                return this._byParentId(model.id, this._defaultParentId());\n            },\n            rootNodes: function () {\n                return this._byParentId(this._defaultParentId());\n            },\n            _rootNode: function (child) {\n                return this._parentNodes(child)[0];\n            },\n            _pageableRootNodes: function (options) {\n                options = options || {};\n                var that = this;\n                var defaultParentId = that._defaultParentId();\n                var parentIdField = that._modelParentIdField();\n                var result = [];\n                var nodesWithoutParentInView = that._nodesWithoutParentInView(options);\n                var node;\n                var root;\n                for (var i = 0; i < nodesWithoutParentInView.length; i++) {\n                    node = nodesWithoutParentInView[i];\n                    if (node[parentIdField] === defaultParentId) {\n                        result.push(node);\n                    } else {\n                        root = that._rootNode(node);\n                        if (root && result.indexOf(root) === -1) {\n                            result.push(root);\n                        }\n                    }\n                }\n                return result;\n            },\n            parentNode: function (model) {\n                return this.get(model.parentId);\n            },\n            _parentNode: function (child) {\n                var that = this;\n                var parentIdField = that._modelParentIdField();\n                var idsMap = that._initIdsMap(data);\n                var parentId = child[parentIdField];\n                var parent = idsMap[parentId] || that._getById(parentId);\n                return parent;\n            },\n            _parentNodes: function (child) {\n                var that = this;\n                var parent = that._parentNode(child);\n                var parents = [];\n                while (parent) {\n                    parents.unshift(parent);\n                    parent = that._parentNode(parent);\n                }\n                return parents;\n            },\n            _parentNodesNotInView: function () {\n                var that = this;\n                var view = that.view();\n                var result = [];\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var parentInView;\n                var parents = [];\n                var directParent;\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                for (var i = 0; i < view.length; i++) {\n                    dataItem = view[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    parentInView = that._parentInView(dataItemParentId);\n                    if (!parentInView && dataItemParentId !== defaultParentId) {\n                        parents = that._parentNodes(dataItem);\n                        directParent = parents && parents.length ? parents[parents.length - 1] : that._getById(dataItemParentId);\n                        if (directParent && result.indexOf(directParent) === -1) {\n                            result.push(directParent);\n                        }\n                    }\n                }\n                return result;\n            },\n            _nodesWithoutParentInView: function (options) {\n                options = options || {};\n                var that = this;\n                var view = that.view();\n                var childrenMap = options.childrenMap || that.childrenMap(that._getData());\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var dataItem;\n                var parentInView;\n                var children = [];\n                var result = [];\n                for (var i = 0; i < view.length; i++) {\n                    dataItem = view[i];\n                    children = childrenMap[dataItem[idField]];\n                    parentInView = that._parentInView(dataItem[parentIdField]);\n                    if (!parentInView) {\n                        result.push(dataItem);\n                    }\n                }\n                return result;\n            },\n            _parentInView: function (parentId) {\n                var view = this.view();\n                for (var i = 0; i < view.length; i++) {\n                    if (view[i].id === parentId) {\n                        return view[i];\n                    }\n                }\n            },\n            level: function (model) {\n                var result = -1;\n                if (!(model instanceof TreeListModel)) {\n                    model = this.get(model);\n                }\n                do {\n                    model = this.parentNode(model);\n                    result++;\n                } while (model);\n                return result;\n            },\n            _pageableModelLevel: function (model) {\n                var that = this;\n                if (!model || !that._isPageable()) {\n                    return 0;\n                }\n                var parents = that._parentNodes(model);\n                return parents.length;\n            },\n            filter: function (value) {\n                var baseFilter = DataSource.fn.filter;\n                if (value === undefined) {\n                    return baseFilter.call(this, value);\n                }\n                baseFilter.call(this, value);\n            },\n            _pageableQueryOptions: function (options) {\n                var dataMaps = this._getDataMaps();\n                options.childrenMap = dataMaps.children;\n                options.idsMap = dataMaps.ids;\n                return options;\n            },\n            _flatData: function (data, skip) {\n                skip = this._isPageable() ? true : skip;\n                return DataSource.fn._flatData.call(this, data, skip);\n            },\n            data: function (data) {\n                var that = this;\n                var result = DataSource.fn.data.call(that, data);\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                    that._calculateCollapsedTotal();\n                }\n                return result;\n            },\n            _modelCanceled: function (model) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._removeFromDataMaps(model);\n                }\n            },\n            _changesCanceled: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                }\n            },\n            _syncEnd: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                }\n            }\n        });\n        TreeListDataSource.create = function (options) {\n            if ($.isArray(options)) {\n                options = { data: options };\n            } else if (options instanceof ObservableArray) {\n                options = { data: options.toJSON() };\n            }\n            return options instanceof TreeListDataSource ? options : new TreeListDataSource(options);\n        };\n        function isCellVisible() {\n            return this.style.display !== 'none';\n        }\n        function sortCells(cells) {\n            var indexAttr = kendo.attr('index');\n            return cells.sort(function (a, b) {\n                a = $(a);\n                b = $(b);\n                var indexA = a.attr(indexAttr);\n                var indexB = b.attr(indexAttr);\n                if (indexA === undefined) {\n                    indexA = $(a).index();\n                }\n                if (indexB === undefined) {\n                    indexB = $(b).index();\n                }\n                indexA = parseInt(indexA, 10);\n                indexB = parseInt(indexB, 10);\n                return indexA > indexB ? 1 : indexA < indexB ? -1 : 0;\n            });\n        }\n        function leafDataCells(container) {\n            var rows = container.find('>tr:not(.k-filter-row)');\n            var filter = function () {\n                var el = $(this);\n                return !el.hasClass('k-group-cell') && !el.hasClass('k-hierarchy-cell');\n            };\n            var cells = $();\n            if (rows.length > 1) {\n                cells = rows.find('th').filter(filter).filter(function () {\n                    return this.rowSpan > 1;\n                });\n            }\n            cells = cells.add(rows.last().find('th').filter(filter));\n            return sortCells(cells);\n        }\n        function createPlaceholders(options) {\n            var spans = [];\n            var className = options.className;\n            for (var i = 0, level = options.level; i < level; i++) {\n                spans.push(kendoDomElement('span', { className: className }));\n            }\n            return spans;\n        }\n        function columnsWidth(cols) {\n            var colWidth, width = 0;\n            for (var idx = 0, length = cols.length; idx < length; idx++) {\n                colWidth = cols[idx].style.width;\n                if (colWidth && colWidth.indexOf('%') == -1) {\n                    width += parseInt(colWidth, 10);\n                }\n            }\n            return width;\n        }\n        function syncTableHeight(table1, table2) {\n            table1 = table1[0];\n            table2 = table2[0];\n            if (table1.rows.length && table2.rows.length && table1.rows.length !== table2.rows.length) {\n                var lockedHeigth = table1.offsetHeight;\n                var tableHeigth = table2.offsetHeight;\n                var row;\n                var diff;\n                if (lockedHeigth > tableHeigth) {\n                    row = table2.rows[table2.rows.length - 1];\n                    diff = lockedHeigth - tableHeigth;\n                } else {\n                    row = table1.rows[table1.rows.length - 1];\n                    diff = tableHeigth - lockedHeigth;\n                }\n                row.style.height = row.offsetHeight + diff + 'px';\n            }\n        }\n        var TreeListPager = ui.Pager.extend({\n            options: { name: 'TreeListPager' },\n            totalPages: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                if (dataSource && dataSource._filter) {\n                    return ui.Pager.fn.totalPages.call(that);\n                }\n                return Math.ceil((that._collapsedTotal() || 0) / (that.pageSize() || 1));\n            },\n            _createDataSource: function (options) {\n                this.dataSource = kendo.data.TreeListDataSource.create(options.dataSource);\n            },\n            _collapsedTotal: function () {\n                var dataSource = this.dataSource;\n                return dataSource ? dataSource.collapsedTotal() || 0 : 0;\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                options = this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.bind(this.events, options);\n                this.model = this.options.model;\n                this.fields = this._fields(this.options.columns);\n                this._initContainer();\n                this.createEditable();\n            },\n            events: [],\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: options.clearContainer,\n                    model: this.model,\n                    change: options.change\n                });\n            },\n            _isEditable: function (column) {\n                return isColumnEditable(column, this.model);\n            },\n            _fields: function (columns) {\n                var fields = [];\n                var idx, length, column;\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (this._isEditable(column)) {\n                        fields.push({\n                            field: column.field,\n                            format: column.format,\n                            editor: column.editor\n                        });\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            close: function () {\n                this.destroy();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty().end().removeAttr(kendo.attr('role'));\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this._attachHandlers();\n                kendo.cycleForm(this.wrapper);\n                this.open();\n            },\n            events: [\n                CANCEL,\n                SAVE\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var formContent = [];\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid).append('<div class=\"k-edit-form-container\"/>');\n                if (options.template) {\n                    this._appendTemplate(formContent);\n                    this.fields = [];\n                } else {\n                    this._appendFields(formContent);\n                }\n                this._appendButtons(formContent);\n                new kendoDom.Tree(this.wrapper.children()[0]).render(formContent);\n                this.wrapper.appendTo(options.appendTo);\n                this.window = new ui.Window(this.wrapper, options.window);\n            },\n            _appendTemplate: function (form) {\n                var template = this.options.template;\n                if (typeof template === STRING) {\n                    template = window.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                form.push(kendoHtmlElement(template));\n            },\n            _appendFields: function (form) {\n                var idx, length, column;\n                var columns = this.options.columns;\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.command) {\n                        continue;\n                    }\n                    form.push(kendoHtmlElement('<div class=\"k-edit-label\"><label for=\"' + column.field + '\">' + (column.title || column.field || '') + '</label></div>'));\n                    if (this._isEditable(column)) {\n                        form.push(kendoHtmlElement('<div ' + kendo.attr('container-for') + '=\"' + column.field + '\" class=\"k-edit-field\"></div>'));\n                    } else {\n                        form.push(kendoDomElement('div', { 'class': 'k-edit-field' }, [this.options.fieldRenderer(column, this.model)]));\n                    }\n                }\n            },\n            _appendButtons: function (form) {\n                form.push(kendoDomElement('div', { 'class': 'k-edit-buttons k-state-default' }, this.options.commandRenderer()));\n            },\n            _attachHandlers: function () {\n                var closeHandler = this._cancelProxy = proxy(this._cancel, this);\n                this.wrapper.on(CLICK + NS, '.k-grid-cancel', this._cancelProxy);\n                this._saveProxy = proxy(this._save, this);\n                this.wrapper.on(CLICK + NS, '.k-grid-update', this._saveProxy);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        closeHandler(e);\n                    }\n                });\n            },\n            _detachHandlers: function () {\n                this._cancelProxy = null;\n                this._saveProxy = null;\n                this.wrapper.off(NS);\n            },\n            _cancel: function (e) {\n                this.trigger(CANCEL, e);\n            },\n            _save: function () {\n                this.trigger(SAVE);\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.destroy();\n                this.window = null;\n                this._detachHandlers();\n                Editor.fn.destroy.call(this);\n            }\n        });\n        var IncellEditor = Editor.extend({\n            destroy: function () {\n                var that = this;\n                that.editable.destroy();\n                that.editable.element.off().empty().removeAttr(kendo.attr('role'));\n                that.model = that.wrapper = that.element = that.columns = that.editable = null;\n            }\n        });\n        var TreeList = DataBoundWidget.extend({\n            init: function (element, options) {\n                DataBoundWidget.fn.init.call(this, element, options);\n                isRtl = kendo.support.isRtl(element);\n                this._dataSource(this.options.dataSource);\n                this._aria();\n                this._columns();\n                this._layout();\n                this._navigatable();\n                this._selectable();\n                this._sortable();\n                this._resizable();\n                this._filterable();\n                this._attachEvents();\n                this._toolbar();\n                this._scrollable();\n                this._reorderable();\n                this._columnMenu();\n                this._minScreenSupport();\n                this._draggable();\n                this._pageable();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n                if (this._hasLockedColumns) {\n                    var widget = this;\n                    this.wrapper.addClass('k-grid-lockedcolumns');\n                    this._resizeHandler = function () {\n                        widget.resize();\n                    };\n                    $(window).on('resize' + NS, this._resizeHandler);\n                }\n                kendo.notify(this);\n            },\n            _draggable: function () {\n                var that = this;\n                var editable = this.options.editable;\n                var dataSource = that.dataSource;\n                var idField = dataSource._modelIdField();\n                var parentIdField = dataSource._modelParentIdField();\n                var pageable = that._isPageable();\n                if (!editable || !editable.move) {\n                    return;\n                }\n                this._dragging = new kendo.ui.HierarchicalDragAndDrop(this.wrapper, {\n                    $angular: this.$angular,\n                    autoScroll: true,\n                    filter: 'tbody>tr',\n                    itemSelector: 'tr',\n                    allowedContainers: this.wrapper,\n                    hintText: function (row) {\n                        var text = function () {\n                            return $(this).text();\n                        };\n                        var separator = '<span class=\\'k-header k-drag-separator\\' />';\n                        return row.children('td').map(text).toArray().join(separator);\n                    },\n                    contains: proxy(function (source, destination) {\n                        var dest = this.dataItem(destination);\n                        var src = this.dataItem(source);\n                        return src == dest || this.dataSource.contains(src, dest);\n                    }, this),\n                    itemFromTarget: function (target) {\n                        var tr = target.closest('tr');\n                        return {\n                            item: tr,\n                            content: tr\n                        };\n                    },\n                    dragstart: proxy(function (source) {\n                        this.wrapper.addClass('k-treelist-dragging');\n                        var model = this.dataItem(source);\n                        return this.trigger(DRAGSTART, { source: model });\n                    }, this),\n                    drag: proxy(function (e) {\n                        e.source = this.dataItem(e.source);\n                        this.trigger(DRAG, e);\n                    }, this),\n                    drop: proxy(function (e) {\n                        e.source = this.dataItem(e.source);\n                        e.destination = this.dataItem(e.destination);\n                        this.wrapper.removeClass('k-treelist-dragging');\n                        return this.trigger(DROP, e);\n                    }, this),\n                    dragend: proxy(function (e) {\n                        var dest = this.dataItem(e.destination);\n                        var src = this.dataItem(e.source);\n                        var originalSrcParentId = src[parentIdField];\n                        var originalSrcIndex = dataSource._indexInChildrenMap(src);\n                        if (pageable) {\n                            dataSource._removeFromChildrenMap(src);\n                            src[parentIdField] = dest ? dest[idField] : null;\n                            dataSource._initChildrenMapForParent(dest);\n                            src[parentIdField] = originalSrcParentId;\n                        }\n                        var isPrevented = src.set('parentId', dest ? dest.id : null);\n                        if (pageable && isPrevented) {\n                            dataSource._removeFromChildrenMap(src);\n                            src[parentIdField] = originalSrcParentId;\n                            dataSource._removeFromChildrenMap(src);\n                            dataSource._insertInChildrenMap(src, originalSrcIndex);\n                        }\n                        e.source = src;\n                        e.destination = dest;\n                        this.trigger(DRAGEND, e);\n                    }, this),\n                    reorderable: false,\n                    dropHintContainer: function (item) {\n                        return item.children('td:eq(1)');\n                    },\n                    dropPositionFrom: function (dropHint) {\n                        return dropHint.prevAll('.k-i-none').length > 0 ? 'after' : 'before';\n                    }\n                });\n            },\n            itemFor: function (model) {\n                if (typeof model == 'number') {\n                    model = this.dataSource.get(model);\n                }\n                return this.tbody.find('[' + kendo.attr('uid') + '=' + model.uid + ']');\n            },\n            _scrollable: function () {\n                if (this.options.scrollable) {\n                    var scrollables = this.thead.closest('.k-grid-header-wrap');\n                    var lockedContent = $(this.lockedContent).bind('DOMMouseScroll' + NS + ' mousewheel' + NS, proxy(this._wheelScroll, this));\n                    this.content.bind('scroll' + NS, function () {\n                        scrollables.scrollLeft(this.scrollLeft);\n                        lockedContent.scrollTop(this.scrollTop);\n                    });\n                    var touchScroller = kendo.touchScroller(this.content);\n                    if (touchScroller && touchScroller.movable) {\n                        this._touchScroller = touchScroller;\n                        touchScroller.movable.bind('change', function (e) {\n                            scrollables.scrollLeft(-e.sender.x);\n                            if (lockedContent) {\n                                lockedContent.scrollTop(-e.sender.y);\n                            }\n                        });\n                    }\n                }\n            },\n            _wheelScroll: function (e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n                var delta = kendo.wheelDeltaY(e);\n                var lockedDiv = $(e.currentTarget);\n                if (delta) {\n                    if (lockedDiv[0].scrollHeight > lockedDiv[0].clientHeight && (lockedDiv[0].scrollTop < lockedDiv[0].scrollHeight - lockedDiv[0].clientHeight && delta < 0 || lockedDiv[0].scrollTop > 0 && delta > 0)) {\n                        e.preventDefault();\n                    }\n                    lockedDiv.one('wheel' + NS, false);\n                    this.content.scrollTop(this.content.scrollTop() + -delta);\n                }\n            },\n            _progress: function () {\n                var messages = this.options.messages;\n                if (!this.tbody.find('tr').length) {\n                    this._showStatus(kendo.template('<span class=\\'#= className #\\' /> #: messages.loading #')({\n                        className: classNames.icon + ' ' + classNames.loading,\n                        messages: messages\n                    }));\n                }\n            },\n            _error: function (e) {\n                if (!this.dataSource.rootNodes().length) {\n                    this._render({ error: e });\n                }\n            },\n            refresh: function (e) {\n                e = e || {};\n                if (e.action == 'itemchange' && this.editor) {\n                    return;\n                }\n                if (this.trigger(DATABINDING)) {\n                    return;\n                }\n                var current = $(this.current());\n                var isCurrentInHeader = false;\n                var currentIndex;\n                this._cancelEditor();\n                this._render();\n                this._adjustHeight();\n                if (this.options.navigatable) {\n                    if (this._isActiveInTable() || this.editor) {\n                        isCurrentInHeader = current.is('th');\n                        currentIndex = Math.max(this.cellIndex(current), 0);\n                    }\n                    this._restoreCurrent(currentIndex, isCurrentInHeader);\n                }\n                this.trigger(DATABOUND);\n            },\n            _angularFooters: function (command) {\n                var i, footer, aggregates;\n                var allAggregates = this.dataSource.aggregates();\n                var footerRows = this._footerItems();\n                for (i = 0; i < footerRows.length; i++) {\n                    footer = footerRows.eq(i);\n                    aggregates = allAggregates[footer.attr('data-parentId')];\n                    this._angularFooter(command, footer.find('td').get(), aggregates);\n                }\n            },\n            _angularFooter: function (command, cells, aggregates) {\n                var columns = this.columns;\n                this.angular(command, function () {\n                    return {\n                        elements: cells,\n                        data: map(columns, function (col) {\n                            return {\n                                column: col,\n                                aggregate: aggregates && aggregates[col.field]\n                            };\n                        })\n                    };\n                });\n            },\n            items: function () {\n                if (this._hasLockedColumns) {\n                    return this._items(this.tbody).add(this._items(this.lockedTable));\n                } else {\n                    return this._items(this.tbody);\n                }\n            },\n            _items: function (container) {\n                return container.find('tr').filter(function () {\n                    return !$(this).hasClass(classNames.footerTemplate);\n                });\n            },\n            _footerItems: function () {\n                var container = this.tbody;\n                if (this._hasLockedColumns) {\n                    container = container.add(this.lockedTable);\n                }\n                return container.find('tr').filter(function () {\n                    return $(this).hasClass(classNames.footerTemplate);\n                });\n            },\n            dataItems: function () {\n                var dataItems = kendo.ui.DataBoundWidget.fn.dataItems.call(this);\n                if (this._hasLockedColumns) {\n                    var n = dataItems.length, tmp = new Array(2 * n);\n                    for (var i = n; --i >= 0;) {\n                        tmp[i] = tmp[i + n] = dataItems[i];\n                    }\n                    dataItems = tmp;\n                }\n                return dataItems;\n            },\n            _showStatus: function (message) {\n                var status = this.element.find('.k-status');\n                var content = $(this.content).add(this.lockedContent);\n                if (!status.length) {\n                    status = $('<div class=\\'k-status\\' />').appendTo(this.element);\n                }\n                this._contentTree.render([]);\n                if (this._hasLockedColumns) {\n                    this._lockedContentTree.render([]);\n                }\n                content.hide();\n                status.html(message);\n            },\n            _hideStatus: function () {\n                this.element.find('.k-status').remove();\n                $(this.content).add(this.lockedContent).show();\n            },\n            _adjustHeight: function () {\n                var that = this;\n                var element = this.element;\n                var contentWrap = element.find(DOT + classNames.gridContentWrap);\n                var header = element.find(DOT + classNames.gridHeader);\n                var toolbar = element.find(DOT + classNames.gridToolbar);\n                var pagerHeight = that._isPageable() && that.pager && that.pager.element.is(':visible') ? outerHeight(that.pager.element) : 0;\n                var height;\n                var scrollbar = kendo.support.scrollbar();\n                element.css(HEIGHT, this.options.height);\n                var isHeightSet = function (el) {\n                    var initialHeight, newHeight;\n                    if (el[0].style.height) {\n                        return true;\n                    } else {\n                        initialHeight = el.height();\n                    }\n                    el.height('auto');\n                    newHeight = el.height();\n                    el.height('');\n                    return initialHeight != newHeight;\n                };\n                if (isHeightSet(element)) {\n                    height = element.height() - outerHeight(header) - outerHeight(toolbar) - pagerHeight;\n                    contentWrap.height(height);\n                    if (this._hasLockedColumns) {\n                        scrollbar = this.table[0].offsetWidth > this.table.parent()[0].clientWidth ? scrollbar : 0;\n                        this.lockedContent.height(height - scrollbar);\n                    }\n                }\n            },\n            _resize: function () {\n                this._applyLockedContainersWidth();\n                this._adjustHeight();\n            },\n            _minScreenSupport: function () {\n                var any = this.hideMinScreenCols();\n                if (any) {\n                    this.minScreenResizeHandler = proxy(this.hideMinScreenCols, this);\n                    $(window).on('resize', this.minScreenResizeHandler);\n                }\n            },\n            hideMinScreenCols: function () {\n                var cols = this.columns, any = false, screenWidth = window.innerWidth > 0 ? window.innerWidth : screen.width;\n                for (var i = 0; i < cols.length; i++) {\n                    var col = cols[i];\n                    var minWidth = col.minScreenWidth;\n                    if (minWidth !== undefined && minWidth !== null) {\n                        any = true;\n                        if (minWidth > screenWidth) {\n                            this.hideColumn(col);\n                        } else {\n                            this.showColumn(col);\n                        }\n                    }\n                }\n                return any;\n            },\n            destroy: function () {\n                DataBoundWidget.fn.destroy.call(this);\n                var dataSource = this.dataSource;\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n                dataSource.unbind(PROGRESS, this._progressHandler);\n                this._navigatableTables = null;\n                this._current = null;\n                if (this._resizeHandler) {\n                    $(window).off('resize' + NS, this._resizeHandler);\n                }\n                if (this._dragging) {\n                    this._dragging.destroy();\n                    this._dragging = null;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n                if (this.reorderable) {\n                    this.reorderable.destroy();\n                    this.reorderable = null;\n                }\n                if (this._draggableInstance && this._draggableInstance.element) {\n                    this._draggableInstance.destroy();\n                    this._draggableInstance = null;\n                }\n                if (this.minScreenResizeHandler) {\n                    $(window).off('resize', this.minScreenResizeHandler);\n                }\n                this._destroyEditor();\n                this.element.off(NS);\n                this.wrapper.off(NS);\n                if (this._touchScroller) {\n                    this._touchScroller.destroy();\n                }\n                this._destroyPager();\n                if (dataSource) {\n                    dataSource._dataMaps = null;\n                }\n                this._autoExpandable = null;\n                this._refreshHandler = this._errorHandler = this._progressHandler = this._dataSourceFetchProxy = null;\n                this.thead = this.content = this.tbody = this.table = this.element = this.lockedHeader = this.lockedContent = null;\n                this._statusTree = this._headerTree = this._contentTree = this._lockedHeaderColsTree = this._lockedContentColsTree = this._lockedHeaderTree = this._lockedContentTree = null;\n            },\n            options: {\n                name: 'TreeList',\n                columns: [],\n                autoBind: true,\n                scrollable: true,\n                selectable: false,\n                sortable: false,\n                toolbar: null,\n                height: null,\n                columnMenu: false,\n                messages: {\n                    noRows: 'No records to display',\n                    loading: 'Loading...',\n                    requestFailed: 'Request failed.',\n                    retry: 'Retry',\n                    commands: {\n                        edit: 'Edit',\n                        update: 'Update',\n                        canceledit: 'Cancel',\n                        create: 'Add new record',\n                        createchild: 'Add child record',\n                        destroy: 'Delete',\n                        excel: 'Export to Excel',\n                        pdf: 'Export to PDF'\n                    }\n                },\n                excel: { hierarchy: true },\n                resizable: false,\n                filterable: false,\n                editable: false,\n                reorderable: false\n            },\n            events: [\n                CHANGE,\n                BEFORE_EDIT,\n                EDIT,\n                PAGE,\n                SAVE,\n                SAVE_CHANGES,\n                REMOVE,\n                EXPAND,\n                COLLAPSE,\n                DATABINDING,\n                DATABOUND,\n                CANCEL,\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n                FILTERMENUINIT,\n                ITEM_CHANGE,\n                CELL_CLOSE,\n                FILTERMENUOPEN,\n                COLUMNHIDE,\n                COLUMNSHOW,\n                COLUMNREORDER,\n                COLUMNRESIZE,\n                COLUMNMENUINIT,\n                COLUMNMENUOPEN,\n                COLUMNLOCK,\n                COLUMNUNLOCK\n            ],\n            _toggle: function (model, expand) {\n                var that = this;\n                var defaultPromise = $.Deferred().resolve().promise();\n                var loaded = model.loaded();\n                if (that._isIncellEditable() && that.editor) {\n                    $(activeElement()).change();\n                    that.closeCell();\n                }\n                if (model._error) {\n                    model.expanded = false;\n                    model._error = undefined;\n                }\n                if (!loaded && model.expanded) {\n                    return defaultPromise;\n                }\n                if (typeof expand == 'undefined') {\n                    expand = !model.expanded;\n                }\n                model.expanded = expand;\n                function afterModelLoaded() {\n                    that._toggleData();\n                    that._render();\n                    that._syncLockedContentHeight();\n                }\n                if (!loaded) {\n                    defaultPromise = this.dataSource.load(model).always(proxy(function () {\n                        afterModelLoaded();\n                    }, this));\n                }\n                afterModelLoaded();\n                return defaultPromise;\n            },\n            _toggleData: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._togglePageableData();\n                }\n            },\n            _togglePageableData: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                var data = dataSource._getData();\n                var result;\n                var queryOptions = dataSource._defaultPageableQueryOptions();\n                that._renderProgress(true);\n                var childrenMap = dataSource._getChildrenMap() || dataSource.childrenMap(dataSource._getData());\n                dataSource._processDataItemsState(data, childrenMap);\n                result = dataSource._processPageableQuery(data, queryOptions);\n                queryOptions.childrenMap = result.childrenMap;\n                queryOptions.filteredChildrenMap = result.filteredChildrenMap;\n                dataSource._aggregateResult = dataSource._calculateAggregates(result.dataToAggregate, queryOptions);\n                dataSource.view(result.data);\n                dataSource._calculateCollapsedTotal();\n                that._refreshPager();\n                that._renderProgress(false);\n            },\n            _refreshPager: function () {\n                var pager = this.pager;\n                if (pager) {\n                    pager.refresh();\n                }\n            },\n            expand: function (row) {\n                return this._toggle(this.dataItem(row), true);\n            },\n            collapse: function (row) {\n                return this._toggle(this.dataItem(row), false);\n            },\n            _toggleChildren: function (e) {\n                var icon = $(e.currentTarget);\n                var model = this.dataItem(icon);\n                if (!model) {\n                    return;\n                }\n                var event = !model.expanded ? EXPAND : COLLAPSE;\n                if (!this.trigger(event, { model: model })) {\n                    this._toggle(model);\n                }\n                e.preventDefault();\n            },\n            _navigatable: function () {\n                var that = this;\n                if (!that.options.navigatable) {\n                    return;\n                }\n                var tables = that.table.add(that.lockedTable);\n                var headerTables = that.thead.parent().add($('>table', that.lockedHeader));\n                if (that.options.scrollable) {\n                    tables = tables.add(headerTables);\n                    headerTables.attr(TABINDEX, -1);\n                }\n                this._navigatableTables = tables;\n                tables.on(kendo.support.touch ? 'touchstart' + NS : 'mousedown' + NS, NAVROW + '>:visible', proxy(that._tableClick, that)).on('focus' + NS, proxy(that._tableFocus, that)).on('focusout' + NS, proxy(that._tableBlur, that)).on('keydown' + NS, proxy(that._tableKeyDown, that));\n            },\n            cellIndex: function (td) {\n                var lockedColumnOffset = 0;\n                if (this.lockedTable && !$.contains(this.lockedTable[0], td[0])) {\n                    lockedColumnOffset = leafColumns(lockedColumns(this.columns)).length;\n                }\n                return $(td).parent().children('td:visible').index(td) + lockedColumnOffset;\n            },\n            _isActiveInTable: function () {\n                var active = kendo._activeElement();\n                if (!active) {\n                    return false;\n                }\n                return this.table[0] === active || $.contains(this.table[0], active) || this.lockedTable && (this.lockedTable[0] === active || $.contains(this.lockedTable[0], active));\n            },\n            _restoreCurrent: function (currentIndex, isCurrentInHeader) {\n                var rowIndex;\n                var row;\n                var td;\n                if (currentIndex === undefined || currentIndex < 0) {\n                    return;\n                }\n                if (this._current) {\n                    this._current.removeClass('k-state-focused');\n                }\n                if (isCurrentInHeader) {\n                    this.current(this.thead.find('th').eq(currentIndex));\n                } else {\n                    rowIndex = 0;\n                    currentIndex = 0;\n                    row = $();\n                    if (this.lockedTable) {\n                        row = this.lockedTable.find('>tbody>tr:visible').eq(rowIndex);\n                    }\n                    row = row.add(this.tbody.children().eq(rowIndex));\n                    td = row.find('>td:visible').eq(currentIndex);\n                    this.current(td);\n                }\n                if (this._current) {\n                    focusTable(this._current.closest('table')[0], true);\n                }\n            },\n            current: function (newCurrent) {\n                var current = this._current;\n                newCurrent = $(newCurrent);\n                if (newCurrent.length && (!current || current[0] !== newCurrent[0])) {\n                    this._updateCurrentAttr(current, newCurrent);\n                    this._scrollCurrent();\n                }\n                if (newCurrent && newCurrent.length) {\n                    this._lastCellIndex = newCurrent.parent().children(DATA_CELL).index(newCurrent);\n                }\n                return this._current;\n            },\n            _setCurrent: function (newCurrent) {\n                var that = this;\n                newCurrent = $(newCurrent);\n                if (newCurrent[0]) {\n                    that._current = newCurrent;\n                    that._updateCurrentAttr(that._current, newCurrent);\n                    that._scrollCurrent();\n                }\n                return that._current;\n            },\n            _scrollCurrent: function () {\n                var current = this._current;\n                var scrollable = this.options.scrollable;\n                if (!current || !scrollable) {\n                    return;\n                }\n                var row = current.parent();\n                var tableContainer = row.closest('table').parent();\n                var isInLockedContainer = tableContainer.is('.k-grid-content-locked,.k-grid-header-locked');\n                var isInContent = tableContainer.is('.k-grid-content-locked,.k-grid-content');\n                var scrollableContainer = $(this.content)[0];\n                if (isInContent) {\n                    this._scrollTo(this._relatedRow(row)[0], scrollableContainer);\n                }\n                if (this.lockedContent) {\n                    this.lockedContent[0].scrollTop = scrollableContainer.scrollTop;\n                }\n                if (!isInLockedContainer) {\n                    this._scrollTo(current[0], scrollableContainer);\n                }\n            },\n            _scrollTo: function (element, container) {\n                var elementToLowercase = element.tagName.toLowerCase();\n                var isHorizontal = elementToLowercase === 'td' || elementToLowercase === 'th';\n                var elementOffset = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n                var elementOffsetDir = element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n                var containerScroll = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n                var containerOffsetDir = container[isHorizontal ? 'clientWidth' : 'clientHeight'];\n                var bottomDistance = elementOffset + elementOffsetDir;\n                var result = 0;\n                var ieCorrection = 0;\n                var firefoxCorrection = 0;\n                if (isRtl && isHorizontal) {\n                    var table = $(element).closest('table')[0];\n                    if (browser.msie) {\n                        ieCorrection = table.offsetLeft;\n                    } else if (browser.mozilla) {\n                        firefoxCorrection = table.offsetLeft - kendo.support.scrollbar();\n                    }\n                }\n                containerScroll = Math.abs(containerScroll + ieCorrection - firefoxCorrection);\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (bottomDistance > containerScroll + containerOffsetDir) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = bottomDistance - containerOffsetDir;\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                result = Math.abs(result + ieCorrection) + firefoxCorrection;\n                container[isHorizontal ? 'scrollLeft' : 'scrollTop'] = result;\n            },\n            _aria: function () {\n                var id = this.element.attr('id') || 'aria';\n                if (id) {\n                    this._elementId = id + '_active_element';\n                }\n            },\n            _currentDataIndex: function (table, current) {\n                var index = current.attr('data-index');\n                if (!index) {\n                    return undefined;\n                }\n                var lockedColumnsCount = lockedColumns(this.columns).length;\n                if (lockedColumnsCount && !table.closest('div').hasClass('k-grid-content-locked')[0]) {\n                    return index - lockedColumnsCount;\n                }\n                return index;\n            },\n            _prevVerticalCell: function (container, current) {\n                var cells;\n                var row = current.parent();\n                var rows = container.children(NAVROW);\n                var rowIndex = rows.index(row);\n                var index = this._currentDataIndex(container, current);\n                if (index || current.hasClass('k-header')) {\n                    cells = parentColumnsCells(current);\n                    return cells.eq(cells.length - 2);\n                }\n                index = Math.max(row.children(DATA_CELL).index(current), this._lastCellIndex || 0);\n                if (row.hasClass('k-filter-row')) {\n                    return leafDataCells(container).filter(isCellVisible).eq(index);\n                }\n                if (rowIndex == -1) {\n                    row = container.find('tr.k-filter-row:visible');\n                    if (!row[0]) {\n                        return leafDataCells(container).filter(isCellVisible).eq(index);\n                    }\n                } else {\n                    row = rowIndex === 0 ? $() : rows.eq(rowIndex - 1);\n                }\n                cells = row.children(DATA_CELL);\n                if (cells.length > index) {\n                    return cells.eq(index);\n                }\n                return cells.eq(0);\n            },\n            _nextVerticalCell: function (container, current) {\n                var cells;\n                var row = current.parent();\n                var rows = container.children(NAVROW);\n                var rowIndex = rows.index(row);\n                var index = this._currentDataIndex(container, current);\n                if (rowIndex != -1 && index === undefined && current.hasClass('k-header')) {\n                    return childColumnsCells(current).eq(1);\n                }\n                index = index ? parseInt(index, 10) : row.children(DATA_CELL).index(current);\n                index = Math.max(index, this._lastCellIndex || 0);\n                if (rowIndex == -1) {\n                    row = rows.eq(0);\n                } else {\n                    row = rows.eq(rowIndex + current[0].rowSpan);\n                }\n                var tmpIndex = index;\n                if (this._currentDataIndex(container, current) !== undefined) {\n                    var currentRowCells = row.children(':not(.k-group-cell):not(.k-hierarchy-cell)');\n                    var hiddenColumns = currentRowCells.filter(':hidden');\n                    for (var idx = 0, length = hiddenColumns.length; idx < length; idx++) {\n                        if (currentRowCells.index(hiddenColumns[idx]) < index) {\n                            tmpIndex--;\n                        }\n                    }\n                }\n                index = tmpIndex;\n                cells = row.children(DATA_CELL);\n                if (cells.length > index) {\n                    return cells.eq(index);\n                }\n                return cells.eq(0);\n            },\n            _verticalContainer: function (container, up) {\n                var table = container.parent();\n                var length = this._navigatableTables.length;\n                var step = Math.floor(length / 2);\n                var index = inArray(table[0], this._navigatableTables);\n                if (up) {\n                    step *= -1;\n                }\n                index += step;\n                if (index >= 0 || index < length) {\n                    table = this._navigatableTables.eq(index);\n                }\n                return table.find(up ? 'thead' : 'tbody');\n            },\n            _updateCurrentAttr: function (current, next) {\n                var headerId = $(current).data('headerId');\n                $(current).removeClass(classNames.focused).closest('table').removeAttr('aria-activedescendant');\n                if (headerId) {\n                    headerId = headerId.replace(this._elementId, '');\n                    $(current).attr('id', headerId);\n                } else {\n                    $(current).removeAttr('id');\n                }\n                next.data('headerId', next.attr('id')).attr('id', this._elementId).addClass(classNames.focused).closest('table').attr('aria-activedescendant', this._elementId);\n                this._current = next;\n            },\n            _tableKeyDown: function (e) {\n                var handled = false;\n                var current = this.current();\n                var target = $(e.target);\n                var canHandle = !e.isDefaultPrevented() && !target.is(':button,a,:input,a>.k-icon');\n                current = current ? current : $(this.lockedTable).add(this.table).find(FIRSTNAVITEM);\n                if (canHandle && e.keyCode == keys.UP) {\n                    handled = this._moveUp(current, e.shiftKey);\n                }\n                if (canHandle && e.keyCode == keys.DOWN) {\n                    handled = this._moveDown(current, e.shiftKey);\n                }\n                if (canHandle && e.keyCode == (isRtl ? keys.LEFT : keys.RIGHT)) {\n                    if (e.altKey) {\n                        handled = this._handleExpand(current);\n                    } else {\n                        handled = this._moveRight(current);\n                    }\n                }\n                if (canHandle && e.keyCode == (isRtl ? keys.RIGHT : keys.LEFT)) {\n                    if (e.altKey) {\n                        handled = this._handleCollapse(current);\n                    } else {\n                        handled = this._moveLeft(current);\n                    }\n                }\n                if (canHandle && e.keyCode == keys.PAGEDOWN) {\n                    handled = this._handlePageDown();\n                }\n                if (canHandle && e.keyCode == keys.PAGEUP) {\n                    handled = this._handlePageUp();\n                }\n                if (e.keyCode == keys.ENTER || e.keyCode == keys.F2) {\n                    handled = this._handleEnterKey(current, e.currentTarget, target);\n                }\n                if (e.keyCode == keys.ESC) {\n                    handled = this._handleEscKey(current, e.currentTarget);\n                }\n                if (canHandle && e.keyCode == keys.HOME) {\n                    handled = this._handleHome(current, e.ctrlKey);\n                }\n                if (canHandle && e.keyCode == keys.END) {\n                    handled = this._handleEnd(current, e.ctrlKey);\n                }\n                if (e.keyCode == keys.TAB) {\n                    handled = this._handleTabKey(current, e.currentTarget, e.shiftKey);\n                }\n                if (handled) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            },\n            _handleExpand: function (current) {\n                var that = this;\n                var row = current.parent();\n                var model = that.dataItem(row);\n                if (current.hasClass('k-header')) {\n                    return false;\n                }\n                if (model && model.hasChildren && !model.expanded && !that.trigger(EXPAND, { model: model })) {\n                    this.expand(row);\n                    return true;\n                }\n                return false;\n            },\n            _handleCollapse: function (current) {\n                var that = this;\n                var row = current.parent();\n                var model = that.dataItem(row);\n                if (current.hasClass('k-header')) {\n                    return false;\n                }\n                if (model && model.hasChildren && model.expanded && !that.trigger(COLLAPSE, { model: model })) {\n                    that.collapse(row);\n                    return true;\n                }\n                return false;\n            },\n            _handleHome: function (current, ctrl) {\n                var row = current.parent();\n                var rowContainer = row.parent();\n                var isInLockedTable = this.lockedTable && this.lockedTable.children('tbody')[0] === rowContainer[0];\n                var isInBody = rowContainer[0] === this.tbody[0];\n                var prev;\n                if (ctrl) {\n                    if (this.lockedTable) {\n                        prev = this.lockedTable.find(FIRSTNAVITEM);\n                    } else {\n                        prev = this.table.find(FIRSTNAVITEM);\n                    }\n                } else if (isInBody || isInLockedTable) {\n                    if (isInBody && this.lockedTable) {\n                        row = this._relatedRow(row);\n                    }\n                    prev = row.children(NAVCELL + ':first');\n                }\n                if (prev && prev.length) {\n                    this.current(prev);\n                    return true;\n                }\n            },\n            _handleEnd: function (current, ctrl) {\n                var row = current.parent();\n                var rowContainer = row.parent();\n                var isInLockedTable = this.lockedTable && this.lockedTable.children('tbody')[0] === rowContainer[0];\n                var isInBody = rowContainer[0] === this.tbody[0];\n                var next;\n                if (ctrl) {\n                    next = this.table.find(LASTITEMROW + '>' + NAVCELL + ':last');\n                } else if (isInBody || isInLockedTable) {\n                    if (!isInBody && this.lockedTable) {\n                        row = this._relatedRow(row);\n                    }\n                    next = row.children(NAVCELL + ':last');\n                }\n                if (next && next.length) {\n                    this.current(next);\n                    return true;\n                }\n            },\n            _handlePageDown: function () {\n                var that = this;\n                if (!that._isPageable()) {\n                    return false;\n                }\n                that.dataSource.page(that.dataSource.page() + 1);\n                return true;\n            },\n            _handlePageUp: function () {\n                var that = this;\n                if (!that._isPageable()) {\n                    return false;\n                }\n                that.dataSource.page(that.dataSource.page() - 1);\n                return true;\n            },\n            _handleEscKey: function (current, currentTable) {\n                var active = kendo._activeElement();\n                var currentIndex;\n                var that = this;\n                var row;\n                var cellIndex;\n                if (!current || !current.parent().hasClass('k-grid-edit-row')) {\n                    if (current.has(active).length) {\n                        focusTable(currentTable, true);\n                        return true;\n                    }\n                    return false;\n                }\n                if (that._isIncellEditable()) {\n                    row = current.parent();\n                    cellIndex = current.index();\n                    that.closeCell(true);\n                    that._setCurrent(row.children().eq(cellIndex));\n                } else {\n                    currentIndex = $(current).parent().index();\n                    if (active) {\n                        active.blur();\n                    }\n                    this.cancelRow();\n                    if (currentIndex >= 0) {\n                        this.current(this.items().eq(currentIndex).children(NAVCELL).first());\n                    }\n                }\n                if (browser.msie && browser.version < 9) {\n                    document.body.focus();\n                }\n                focusTable(currentTable, true);\n                return true;\n            },\n            _handleEnterKey: function (current, currentTable, target) {\n                var editable = this.options.editable;\n                var container = target.closest('[role=gridcell]');\n                var focusable;\n                if (!target.is('table') && !$.contains(current[0], target[0])) {\n                    current = container;\n                }\n                if (current.is('th')) {\n                    current.find('.k-link').click();\n                    return true;\n                }\n                focusable = current.find(':kendoFocusable:first');\n                if (focusable[0] && current.hasClass('k-state-focused')) {\n                    focusable.focus();\n                    return true;\n                }\n                if (editable && !target.is(':button,.k-button,textarea')) {\n                    if (!container[0]) {\n                        container = current;\n                    }\n                    this._handleEditing(container, false, currentTable);\n                    return true;\n                }\n                return false;\n            },\n            _handleTabKey: function (current, currentTable, shiftKey) {\n                var that = this;\n                var incellEditing = that.options.editable && that._isIncellEditable();\n                var cell;\n                if (!incellEditing || current.is('th')) {\n                    return false;\n                }\n                cell = $(activeElement()).closest(DOT + classNames.editCell);\n                if (cell[0] && cell[0] !== current[0]) {\n                    current = cell;\n                }\n                cell = that._tabNext(current, currentTable, shiftKey);\n                if (cell.length) {\n                    that._handleEditing(current, cell, cell.closest(TABLE));\n                    return true;\n                }\n                return false;\n            },\n            _tabNext: function (current, currentTable, back) {\n                var that = this;\n                var switchRow = true;\n                var next = back ? current.prevAll(DATA_CELL + ':first') : current.nextAll(':visible:first');\n                if (!next.length) {\n                    next = current.parent();\n                    if (that.lockedTable) {\n                        switchRow = back && currentTable == that.lockedTable[0] || !back && currentTable == that.table[0];\n                        next = that._relatedRow(next);\n                    }\n                    if (switchRow) {\n                        next = next[back ? 'prevAll' : 'nextAll']('tr:not(.k-grouping-row):not(.k-detail-row):visible:first');\n                    }\n                    next = next.children(DATA_CELL + (back ? ':last' : ':first'));\n                }\n                return next;\n            },\n            _handleEditing: function (current, next, table) {\n                var that = this, active = $(kendo._activeElement()), isIE = browser.msie, editContainer, focusable, isEdited;\n                var editable = that.options.editable && that.options.editable.update !== false;\n                var incellEditing = that._isIncellEditable();\n                table = $(table);\n                if (incellEditing) {\n                    isEdited = current.hasClass(classNames.editCell);\n                } else {\n                    isEdited = current.parent().hasClass('k-grid-edit-row');\n                }\n                if (that.editor) {\n                    editContainer = that.editor.wrapper;\n                    if (editContainer && $.contains(editContainer[0], active[0])) {\n                        if (browser.opera) {\n                            active.blur().change().triggerHandler('blur');\n                        } else {\n                            active.blur();\n                            if (isIE) {\n                                active.blur();\n                            }\n                        }\n                    }\n                    if (!that.editor) {\n                        focusTable(table);\n                        return;\n                    }\n                    if (that.editor.end()) {\n                        if (incellEditing) {\n                            that.closeCell();\n                        } else {\n                            that.saveRow();\n                            isEdited = true;\n                        }\n                    } else {\n                        if (incellEditing) {\n                            that.current(editContainer);\n                        } else {\n                            that.current(editContainer.children().filter(NAVCELL).first());\n                        }\n                        focusable = editContainer.find(':kendoFocusable:first')[0];\n                        if (focusable) {\n                            focusable.focus();\n                        }\n                        return;\n                    }\n                }\n                if (next) {\n                    that.current(next);\n                }\n                focusTable(table, true);\n                if (!editable) {\n                    return;\n                }\n                if (!isEdited && !next || next) {\n                    var currentIndex = that.current().index();\n                    if (incellEditing) {\n                        that.editCell(that.current());\n                    } else {\n                        that.editRow(that.current().parent());\n                        that.current(that.editor.wrapper.children().eq(currentIndex));\n                        that.current().removeClass('k-state-focused');\n                    }\n                }\n            },\n            _moveRight: function (current) {\n                var next = current.nextAll(NAVCELL).first();\n                var row = current.parent();\n                if (current.hasClass('k-header')) {\n                    next = current.nextAll(NAVHEADER).first();\n                    if (!next[0] && this.lockedTable && current.closest('table')[0] === this.lockedHeader.find('table')[0]) {\n                        next = this.thead.find(NAVHEADER + ':first');\n                    }\n                }\n                if (!next[0] && this.lockedTable && current.closest('table')[0] === this.lockedTable[0]) {\n                    next = this._relatedRow(row).children(NAVCELL).first();\n                }\n                if (next[0] && next[0] !== current[0]) {\n                    focusTable(next.closest('table'), true);\n                }\n                this.current(next);\n                return true;\n            },\n            _moveLeft: function (current) {\n                var prev = current.prevAll(NAVCELL).first();\n                var row = current.parent();\n                if (current.hasClass('k-header')) {\n                    prev = current.prevAll(NAVHEADER).first();\n                    if (!prev[0] && this.lockedTable && current.closest('table')[0] === this.thead.parent()[0]) {\n                        prev = this.lockedHeader.find('>table>thead>tr>' + NAVHEADER + ':last');\n                    }\n                }\n                if (!prev[0] && this.lockedTable && current.closest('table')[0] === this.table[0]) {\n                    prev = this._relatedRow(row).children(NAVCELL).last();\n                }\n                if (prev[0] && prev[0] !== current[0]) {\n                    focusTable(prev.closest('table'), true);\n                }\n                this.current(prev);\n                return true;\n            },\n            _moveUp: function (current, shiftKey) {\n                var container = current.parent().parent();\n                var prev;\n                if (shiftKey) {\n                    prev = current.parent();\n                    prev = prev.prevAll(ITEMROW + ':first');\n                    prev = current.parent().is(ITEMROW) ? prev.children().eq(current.index()) : prev.children(DATA_CELL + ':last');\n                } else {\n                    prev = this._prevVerticalCell(container, current);\n                    if (!prev[0]) {\n                        this._lastCellIndex = 0;\n                        container = this._verticalContainer(container, true);\n                        prev = this._prevVerticalCell(container, current);\n                        if (prev[0]) {\n                            focusTable(container.parent(), true);\n                        }\n                    }\n                }\n                var tmp = this._lastCellIndex || 0;\n                this.current(prev);\n                this._lastCellIndex = tmp;\n                return true;\n            },\n            _moveDown: function (current, shiftKey) {\n                var container = current.parent().parent();\n                var next;\n                if (shiftKey) {\n                    next = current.parent();\n                    next = next.nextAll(ITEMROW + ':first');\n                    next = current.parent().is(ITEMROW) ? next.children().eq(current.index()) : next.children(DATA_CELL + ':first');\n                } else {\n                    next = this._nextVerticalCell(container, current);\n                    if (!next[0]) {\n                        this._lastCellIndex = 0;\n                        container = this._verticalContainer(container);\n                        next = this._nextVerticalCell(container, current);\n                        if (next[0]) {\n                            focusTable(container.parent(), true);\n                        }\n                    }\n                }\n                var tmp = this._lastCellIndex || 0;\n                this.current(next);\n                this._lastCellIndex = tmp;\n                return true;\n            },\n            _tableClick: function (e) {\n                var currentTarget = $(e.currentTarget), isHeader = currentTarget.is('th'), table = this.table.add(this.lockedTable), headerTable = this.thead.parent().add($('>table', this.lockedHeader)), isInput = isInputElement(e.target), currentTable = currentTarget.closest('table')[0];\n                if (kendo.support.touch) {\n                    return;\n                }\n                if (currentTable !== table[0] && currentTable !== table[1] && currentTable !== headerTable[0] && currentTable !== headerTable[1]) {\n                    return;\n                }\n                if (this.options.navigatable) {\n                    this.current(currentTarget);\n                }\n                if (isHeader || !isInput) {\n                    setTimeout(function () {\n                        if (!isInputElement(kendo._activeElement()) || !$.contains(currentTable, kendo._activeElement())) {\n                            focusTable(currentTable, true);\n                        }\n                    });\n                }\n                if (isHeader) {\n                    e.preventDefault();\n                }\n            },\n            _setTabIndex: function (table) {\n                this._navigatableTables.attr(TABINDEX, -1);\n                table.attr(TABINDEX, 0);\n            },\n            _tableFocus: function (e) {\n                var current = this.current();\n                var table = $(e.currentTarget);\n                if (current && current.is(':visible')) {\n                    current.addClass(classNames.focused);\n                } else {\n                    this.current(table.find(FIRSTNAVITEM));\n                }\n                this._setTabIndex(table);\n            },\n            _tableBlur: function () {\n                var current = this.current();\n                if (current) {\n                    current.removeClass(classNames.focused);\n                }\n            },\n            _attachEvents: function () {\n                var icons = DOT + classNames.iconCollapse + ', .' + classNames.iconExpand + ', .' + classNames.refresh;\n                var retryButton = DOT + classNames.retry;\n                this.element.on(MOUSEDOWN + NS, icons, proxy(this._toggleChildren, this)).on(CLICK + NS, retryButton, this._dataSourceFetchProxy).on(CLICK + NS, '.k-button[data-command]', proxy(this._commandClick, this));\n                this._attachCellEditingEventHandlers();\n            },\n            _attachCellEditingEventHandlers: function () {\n                var that = this;\n                var editable = that.options.editable;\n                var selectable = that.selectable && that.selectable.options.multiple;\n                var closeCell = function () {\n                    var target = activeElement();\n                    var editor = that.editor || {};\n                    var cell = editor.element;\n                    if (cell && !$.contains(cell[0], target) && cell[0] !== target && !$(target).closest('.k-animation-container').length) {\n                        if (editor.end()) {\n                            that.closeCell();\n                        }\n                    }\n                };\n                if (that._isIncellEditable() && editable.update !== false) {\n                    that.wrapper.on(CLICK + NS, 'tr:not(.k-grouping-row) > td', function (e) {\n                        var td = $(this), isLockedCell = that.lockedTable && td.closest('table')[0] === that.lockedTable[0];\n                        if (td.hasClass(classNames.editCell) || td.has('a.k-grid-delete').length || td.has('button.k-grid-delete').length || td.closest('tbody')[0] !== that.tbody[0] && !isLockedCell || $(e.target).is(':input') || $(e.target).hasClass(classNames.iconExpand) || $(e.target).hasClass(classNames.iconCollapse)) {\n                            return;\n                        }\n                        if (that.editor) {\n                            if (that.editor.end()) {\n                                if (selectable) {\n                                    $(activeElement()).blur();\n                                }\n                                that.closeCell();\n                                that.editCell(td);\n                            }\n                        } else {\n                            that.editCell(td);\n                        }\n                    }).on('focusin' + NS, function () {\n                        if (!$.contains(this, activeElement())) {\n                            clearTimeout(that._closeCellTimeout);\n                            that._closeCellTimeout = null;\n                        }\n                    }).on('focusout' + NS, function () {\n                        that._closeCellTimeout = setTimeout(closeCell, 1);\n                    });\n                }\n            },\n            _commandByName: function (name) {\n                var columns = this.columns;\n                var toolbar = $.isArray(this.options.toolbar) ? this.options.toolbar : [];\n                var i, j, commands, currentName;\n                name = name.toLowerCase();\n                if (defaultCommands[name]) {\n                    return defaultCommands[name];\n                }\n                for (i = 0; i < columns.length; i++) {\n                    commands = columns[i].command;\n                    if (commands) {\n                        for (j = 0; j < commands.length; j++) {\n                            currentName = commands[j].name;\n                            if (!currentName) {\n                                continue;\n                            }\n                            if (currentName.toLowerCase() == name) {\n                                return commands[j];\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < toolbar.length; i++) {\n                    currentName = toolbar[i].name;\n                    if (!currentName) {\n                        continue;\n                    }\n                    if (currentName.toLowerCase() == name) {\n                        return toolbar[i];\n                    }\n                }\n            },\n            _commandClick: function (e) {\n                var button = $(e.currentTarget);\n                var commandName = button.attr('data-command');\n                var command = this._commandByName(commandName);\n                var row = button.parentsUntil(this.wrapper, 'tr');\n                row = row.length ? row : undefined;\n                if (command) {\n                    if (command.methodName) {\n                        this[command.methodName](row);\n                    } else if (command.click) {\n                        command.click.call(this, e);\n                    }\n                    e.preventDefault();\n                }\n            },\n            _ensureExpandableColumn: function () {\n                if (this._autoExpandable) {\n                    delete this._autoExpandable.expandable;\n                }\n                var visibleColumns = grep(this.columns, not(is('hidden')));\n                var expandableColumns = grep(visibleColumns, is('expandable'));\n                if (this.columns.length && !expandableColumns.length) {\n                    this._autoExpandable = visibleColumns[0];\n                    visibleColumns[0].expandable = true;\n                }\n            },\n            _columns: function () {\n                var columns = this.options.columns || [];\n                this.columns = map(columns, function (column) {\n                    column = typeof column === 'string' ? { field: column } : column;\n                    return extend({ encoded: true }, column);\n                });\n                var lockedCols = lockedColumns(columns);\n                if (lockedCols.length > 0) {\n                    this._hasLockedColumns = true;\n                    this.columns = lockedCols.concat(nonLockedColumns(this.columns));\n                }\n                this.columns = normalizeColumns(this.columns);\n                this._ensureExpandableColumn();\n                this._columnTemplates();\n                this._columnAttributes();\n            },\n            _columnTemplates: function () {\n                var idx, length, column;\n                var columns = leafColumns(this.columns);\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.template) {\n                        column.template = kendo.template(column.template);\n                    }\n                    if (column.headerTemplate) {\n                        column.headerTemplate = kendo.template(column.headerTemplate);\n                    }\n                    if (column.footerTemplate) {\n                        column.footerTemplate = kendo.template(column.footerTemplate);\n                    }\n                }\n            },\n            _columnAttributes: function () {\n                var idx, length;\n                var columns = this.columns;\n                function convertStyle(attr) {\n                    var properties, i, declaration;\n                    if (attr && attr.style) {\n                        properties = attr.style.split(';');\n                        attr.style = {};\n                        for (i = 0; i < properties.length; i++) {\n                            declaration = properties[i].split(':');\n                            var name = $.trim(declaration[0]);\n                            if (name) {\n                                attr.style[$.camelCase(name)] = $.trim(declaration[1]);\n                            }\n                        }\n                    }\n                }\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    convertStyle(columns[idx].attributes);\n                    convertStyle(columns[idx].headerAttributes);\n                }\n            },\n            _layout: function () {\n                var columns = this.columns;\n                var element = this.element;\n                var layout = '';\n                this.wrapper = element.addClass(classNames.wrapper);\n                layout = '<div class=\\'#= gridHeader #\\'>';\n                if (this._hasLockedColumns) {\n                    layout += '<div class=\\'k-grid-header-locked\\'>' + '<table role=\\'grid\\'>' + '<colgroup></colgroup>' + '<thead role=\\'rowgroup\\' />' + '</table>' + '</div>';\n                }\n                layout += '<div class=\\'#= gridHeaderWrap #\\'>' + '<table role=\\'grid\\'>' + '<colgroup></colgroup>' + '<thead role=\\'rowgroup\\' />' + '</table>' + '</div>' + '</div>';\n                if (this._hasLockedColumns) {\n                    layout += '<div class=\\'k-grid-content-locked\\'>' + '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<tbody />' + '</table>' + '</div>';\n                }\n                layout += '<div class=\\'#= gridContentWrap # k-auto-scrollable\\'>' + '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<tbody />' + '</table>' + '</div>';\n                if (!this.options.scrollable) {\n                    layout = '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<thead class=\\'#= gridHeader #\\' role=\\'rowgroup\\' />' + '<tbody />' + '</table>';\n                }\n                if (this.options.toolbar) {\n                    layout = '<div class=\\'#= header # #= gridToolbar #\\' />' + layout;\n                }\n                element.append(kendo.template(layout)(classNames) + '<div class=\\'k-status\\' />');\n                this.toolbar = element.find(DOT + classNames.gridToolbar);\n                var header = element.find(DOT + classNames.gridHeader).find('thead').addBack().filter('thead');\n                this.thead = header.last();\n                if (this.options.scrollable) {\n                    var rtl = kendo.support.isRtl(element);\n                    element.find('div.' + classNames.gridHeader).css(rtl ? 'padding-left' : 'padding-right', kendo.support.scrollbar());\n                }\n                var content = element.find(DOT + classNames.gridContentWrap);\n                if (!content.length) {\n                    content = element;\n                } else {\n                    this.content = content;\n                }\n                this.table = content.find('>table');\n                this.tbody = this.table.find('>tbody');\n                if (this._hasLockedColumns) {\n                    this.lockedHeader = header.first().closest('.k-grid-header-locked');\n                    this.lockedContent = element.find('.k-grid-content-locked');\n                    this.lockedTable = this.lockedContent.children();\n                }\n                this._initVirtualTrees();\n                this._renderCols();\n                this._renderHeader();\n                this.angular('compile', function () {\n                    return {\n                        elements: header.find('th.k-header').get(),\n                        data: map(columns, function (col) {\n                            return { column: col };\n                        })\n                    };\n                });\n            },\n            _initVirtualTrees: function () {\n                this._headerColsTree = new kendoDom.Tree(this.thead.prev()[0]);\n                this._contentColsTree = new kendoDom.Tree(this.tbody.prev()[0]);\n                this._headerTree = new kendoDom.Tree(this.thead[0]);\n                this._contentTree = new kendoDom.Tree(this.tbody[0]);\n                this._statusTree = new kendoDom.Tree(this.element.children('.k-status')[0]);\n                if (this.lockedHeader) {\n                    this._lockedHeaderColsTree = new kendoDom.Tree(this.lockedHeader.find('colgroup')[0]);\n                    this._lockedContentColsTree = new kendoDom.Tree(this.lockedTable.find('>colgroup')[0]);\n                    this._lockedHeaderTree = new kendoDom.Tree(this.lockedHeader.find('thead')[0]);\n                    this._lockedContentTree = new kendoDom.Tree(this.lockedTable.find('>tbody')[0]);\n                }\n            },\n            _toolbar: function () {\n                var options = this.options.toolbar;\n                var toolbar = this.toolbar;\n                if (!options) {\n                    return;\n                }\n                if ($.isArray(options)) {\n                    var buttons = this._buildCommands(options);\n                    new kendoDom.Tree(toolbar[0]).render(buttons);\n                } else {\n                    toolbar.append(kendo.template(options)({}));\n                }\n                this.angular('compile', function () {\n                    return { elements: toolbar.get() };\n                });\n            },\n            _lockedColumns: function () {\n                return grep(this.columns, is('locked'));\n            },\n            _nonLockedColumns: function () {\n                return grep(this.columns, not(is('locked')));\n            },\n            _templateColumns: function () {\n                return grep(this.columns, is('template'));\n            },\n            _flushCache: function () {\n                if (this.options.$angular && this._templateColumns().length) {\n                    this._contentTree.render([]);\n                    if (this._hasLockedColumns) {\n                        this._lockedContentTree.render([]);\n                    }\n                }\n            },\n            _render: function (options) {\n                var that = this;\n                options = options || {};\n                options = that._renderOptions(options);\n                var messages = this.options.messages;\n                var pageable = that._isPageable();\n                var dataSource = that.dataSource;\n                var maps = {\n                    children: options.filteredChildrenMap || options.childrenMap,\n                    ids: options.idsMap\n                };\n                var dataMaps = pageable ? maps && maps.children && maps.ids ? maps : dataSource._initDataMaps(dataSource._getData()) : {};\n                var childrenMap = dataMaps.children;\n                var idsMap = dataMaps.ids;\n                options.childrenMap = childrenMap;\n                options.idsMap = idsMap;\n                var data = that._dataToRender(options);\n                var level = that._renderedModelLevel(data[0], options);\n                var uidAttr = kendo.attr('uid');\n                var selected = this.select().removeClass('k-state-selected').map(function (_, row) {\n                    return $(row).attr(uidAttr);\n                });\n                var viewChildrenMap;\n                this._absoluteIndex = 0;\n                this._angularItems('cleanup');\n                this._angularFooters('cleanup');\n                this._flushCache();\n                that._clearRenderMap();\n                if (options.error) {\n                    this._showStatus(kendo.template('#: messages.requestFailed # ' + '<button class=\\'#= buttonClass #\\'>#: messages.retry #</button>')({\n                        buttonClass: [\n                            classNames.button,\n                            classNames.retry\n                        ].join(' '),\n                        messages: messages\n                    }));\n                } else if (!data.length) {\n                    this._showStatus(kendo.htmlEncode(messages.noRows));\n                } else {\n                    if (pageable) {\n                        viewChildrenMap = that._viewChildrenMap(options);\n                    }\n                    this._hideStatus();\n                    this._contentTree.render(this._trs({\n                        columns: leafColumns(nonLockedColumns(this.columns)),\n                        editedColumn: options.editedColumn,\n                        editedColumnIndex: options.editedColumnIndex,\n                        aggregates: options.aggregates,\n                        selected: selected,\n                        data: data,\n                        childrenMap: childrenMap,\n                        viewChildrenMap: viewChildrenMap,\n                        visible: true,\n                        level: 0\n                    }));\n                    if (this._hasLockedColumns) {\n                        this._absoluteIndex = 0;\n                        this._lockedContentTree.render(this._trs({\n                            columns: leafColumns(lockedColumns(this.columns)),\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            aggregates: options.aggregates,\n                            selected: selected,\n                            data: data,\n                            childrenMap: childrenMap,\n                            viewChildrenMap: viewChildrenMap,\n                            visible: true,\n                            level: level\n                        }));\n                    }\n                }\n                if (this._touchScroller) {\n                    this._touchScroller.contentResized();\n                }\n                this._muteAngularRebind(function () {\n                    this._angularItems('compile');\n                    this._angularFooters('compile');\n                });\n                this.items().filter(function () {\n                    return $.inArray($(this).attr(uidAttr), selected) >= 0;\n                }).addClass('k-state-selected');\n                this._syncLockedContentHeight();\n                that._togglePagerVisibility();\n            },\n            _renderProgress: function (toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n            _renderOptions: function (options) {\n                options = options || {};\n                var that = this;\n                var dataMaps = that.dataSource._getDataMaps();\n                var filter = that.dataSource.filter();\n                if (that._isPageable()) {\n                    options.childrenMap = dataMaps.children;\n                    options.idsMap = dataMaps.ids;\n                    if (filter) {\n                        options.filteredChildrenMap = dataMaps.filteredChildren;\n                    }\n                }\n                return options;\n            },\n            _renderedModelLevel: function (model, options) {\n                return !this._isPageable() ? 0 : this.dataSource._pageableModelLevel(model, options);\n            },\n            _viewChildrenMap: function (options) {\n                options = options || {};\n                var that = this;\n                var dataSource = that.dataSource;\n                var viewChildrenMap = dataSource.childrenMap(dataSource.view());\n                var idField = dataSource._modelIdField();\n                var parentsNotInView = dataSource._parentNodesNotInView();\n                var parentNotInView;\n                var parentNotInViewId;\n                var parents;\n                var parent;\n                var parentId;\n                var child;\n                var childId;\n                var parentsCopy;\n                that._clearRenderMap();\n                for (var i = 0; i < parentsNotInView.length; i++) {\n                    parentNotInView = parentsNotInView[i];\n                    parentNotInViewId = parentNotInView[idField];\n                    that._markNodeAsNonRenderable(parentNotInViewId);\n                    viewChildrenMap[parentNotInViewId] = viewChildrenMap[parentNotInViewId] || [];\n                    parents = dataSource._parentNodes(parentNotInView);\n                    parentsCopy = parents.slice();\n                    parentsCopy.push(parentNotInView);\n                    for (var parentIndex = 0; parentIndex < parentsCopy.length - 1; parentIndex++) {\n                        parent = parentsCopy[parentIndex];\n                        parentId = parent[idField];\n                        that._markNodeAsNonRenderable(parentId);\n                        viewChildrenMap[parentId] = viewChildrenMap[parentId] || [];\n                        child = parentsCopy[parentIndex + 1];\n                        childId = child[idField];\n                        that._markNodeAsNonRenderable(childId);\n                        viewChildrenMap[childId] = viewChildrenMap[childId] || [];\n                        if (viewChildrenMap[parentId].indexOf(child) === -1) {\n                            viewChildrenMap[parentId].unshift(child);\n                        }\n                    }\n                }\n                return viewChildrenMap;\n            },\n            _clearRenderMap: function () {\n                this._skipRenderingMap = {};\n            },\n            _dataToRender: function (options) {\n                var that = this;\n                if (that._isPageable()) {\n                    return that.dataSource._pageableRootNodes(options);\n                }\n                return that.dataSource.rootNodes();\n            },\n            _markNodeAsNonRenderable: function (nodeId) {\n                this._skipRenderingMap[nodeId] = true;\n            },\n            _adjustRowsHeight: function (table1, table2) {\n                if (!this._hasLockedColumns) {\n                    return;\n                }\n                var rows = table1[0].rows;\n                var length = rows.length;\n                var idx;\n                var rows2 = table2[0].rows;\n                var containers = table1.add(table2);\n                var containersLength = containers.length;\n                var heights = [];\n                for (idx = 0; idx < length; idx++) {\n                    if (!rows2[idx]) {\n                        break;\n                    }\n                    if (rows[idx].style.height) {\n                        rows[idx].style.height = rows2[idx].style.height = '';\n                    }\n                }\n                for (idx = 0; idx < length; idx++) {\n                    if (!rows2[idx]) {\n                        break;\n                    }\n                    var offsetHeight1 = rows[idx].offsetHeight;\n                    var offsetHeight2 = rows2[idx].offsetHeight;\n                    var height = 0;\n                    if (offsetHeight1 > offsetHeight2) {\n                        height = offsetHeight1;\n                    } else if (offsetHeight1 < offsetHeight2) {\n                        height = offsetHeight2;\n                    }\n                    heights.push(height);\n                }\n                for (idx = 0; idx < containersLength; idx++) {\n                    containers[idx].style.display = 'none';\n                }\n                for (idx = 0; idx < length; idx++) {\n                    if (heights[idx]) {\n                        rows[idx].style.height = rows2[idx].style.height = heights[idx] + 1 + 'px';\n                    }\n                }\n                for (idx = 0; idx < containersLength; idx++) {\n                    containers[idx].style.display = '';\n                }\n            },\n            _ths: function (columns, rowSpan) {\n                var ths = [];\n                var column, title, children, cellClasses, attr, headerContent;\n                for (var i = 0, length = columns.length; i < length; i++) {\n                    column = columns[i];\n                    children = [];\n                    cellClasses = [classNames.header];\n                    if (column.headerTemplate) {\n                        title = column.headerTemplate({});\n                    } else {\n                        title = column.title || column.field || '';\n                    }\n                    if (column.headerTemplate) {\n                        headerContent = kendoHtmlElement(title);\n                    } else {\n                        headerContent = kendoTextElement(title);\n                    }\n                    if (column.sortable) {\n                        children.push(kendoDomElement('a', {\n                            href: '#',\n                            className: classNames.link\n                        }, [headerContent]));\n                    } else {\n                        children.push(headerContent);\n                    }\n                    attr = {\n                        'data-field': column.field,\n                        'data-title': column.title,\n                        'style': column.hidden === true ? { 'display': 'none' } : {},\n                        className: cellClasses.join(' '),\n                        'role': 'columnheader'\n                    };\n                    if (!column.columns) {\n                        attr.rowSpan = rowSpan ? rowSpan : 1;\n                    }\n                    if (column.headerAttributes && column.headerAttributes.colSpan === 1) {\n                        delete column.headerAttributes.colSpan;\n                    }\n                    if (column['data-index'] > -1) {\n                        attr['data-index'] = column['data-index'];\n                    }\n                    attr = extend(true, {}, attr, column.headerAttributes);\n                    ths.push(kendoDomElement('th', attr, children));\n                }\n                return ths;\n            },\n            _cols: function (columns) {\n                var cols = [];\n                var width, attr;\n                for (var i = 0; i < columns.length; i++) {\n                    if (columns[i].hidden === true) {\n                        continue;\n                    }\n                    width = columns[i].width;\n                    attr = {};\n                    if (width && parseInt(width, 10) !== 0) {\n                        attr.style = { width: typeof width === 'string' ? width : width + 'px' };\n                    }\n                    cols.push(kendoDomElement('col', attr));\n                }\n                return cols;\n            },\n            _clearColsCache: function () {\n                this._headerColsTree.render([]);\n                if (this.options.scrollable) {\n                    this._contentColsTree.render([]);\n                }\n                if (this._hasLockedColumns) {\n                    this._lockedHeaderColsTree.render([]);\n                    this._lockedContentColsTree.render([]);\n                }\n            },\n            _renderCols: function () {\n                var columns = nonLockedColumns(this.columns);\n                this._headerColsTree.render(this._cols(leafColumns(columns)));\n                if (this.options.scrollable) {\n                    this._contentColsTree.render(this._cols(leafColumns(columns)));\n                }\n                if (this._hasLockedColumns) {\n                    columns = lockedColumns(this.columns);\n                    this._lockedHeaderColsTree.render(this._cols(leafColumns(columns)));\n                    this._lockedContentColsTree.render(this._cols(leafColumns(columns)));\n                }\n            },\n            _retrieveFirstColumn: function (columns, rows) {\n                var result = $();\n                if (rows.length && columns[0]) {\n                    var column = columns[0];\n                    while (column.columns && column.columns.length) {\n                        column = column.columns[0];\n                        rows = rows.filter(':not(:first())');\n                    }\n                    result = result.add(rows);\n                }\n                return result;\n            },\n            _updateFirstColumnClass: function () {\n                var that = this;\n                var columns = that.columns || [];\n                var tr = that.thead.find('>tr:not(:first)');\n                var rows;\n                columns = nonLockedColumns(columns);\n                rows = that._retrieveFirstColumn(columns, tr);\n                if (that.lockedHeader) {\n                    tr = that.lockedHeader.find('thead>tr:not(.k-filter-row):not(:first)');\n                    columns = lockedColumns(that.columns);\n                    rows = rows.add(that._retrieveFirstColumn(columns, tr));\n                }\n                rows.each(function () {\n                    var ths = $(this).find('th');\n                    ths.removeClass('k-first');\n                    ths.eq(0).addClass('k-first');\n                });\n            },\n            _updateRowSpans: function (rows) {\n                for (var i = rows.length - 1; i >= 0; i--) {\n                    var included = visibleChildColumns(rows[i].cells).length > 0;\n                    if (included) {\n                        rows[i].rowSpan = rows.length - i;\n                    }\n                }\n            },\n            _setColumnDataIndexes: function (columns) {\n                for (var i = 0; i < columns.length; i++) {\n                    columns[i]['data-index'] = i;\n                }\n            },\n            _updateColumnCellIndex: function () {\n                var header;\n                var offset = 0;\n                if (this.lockedHeader) {\n                    header = this.lockedHeader.find('thead');\n                    offset = updateCellIndex(header, lockedColumns(this.columns));\n                }\n                updateCellIndex(this.thead, nonLockedColumns(this.columns), offset);\n            },\n            _setParentsVisibility: function (column, visible) {\n                var columns = this.columns;\n                var idx;\n                var parents = [];\n                var parent;\n                var predicate = visible ? function (p) {\n                    return visibleColumns(p.columns).length && p.hidden;\n                } : function (p) {\n                    return !visibleColumns(p.columns).length && !p.hidden;\n                };\n                if (columnParents(column, columns, parents) && parents.length) {\n                    for (idx = parents.length - 1; idx >= 0; idx--) {\n                        parent = parents[idx];\n                        if (predicate(parent)) {\n                            parent.hidden = !visible;\n                        }\n                    }\n                }\n            },\n            _prepareColumns: function (rows, columns, parentCell, parentRow, parentColumn) {\n                var row = parentRow || rows[rows.length - 1];\n                var childRow = rows[row.index + 1];\n                var totalColSpan = 0;\n                for (var idx = 0; idx < columns.length; idx++) {\n                    var cell = $.extend({}, columns[idx], { headerAttributes: {} });\n                    row.cells.push(cell);\n                    if (columns[idx].columns && columns[idx].columns.length) {\n                        if (!childRow) {\n                            childRow = {\n                                rowSpan: 0,\n                                cells: [],\n                                index: rows.length\n                            };\n                            rows.push(childRow);\n                        }\n                        if (columns[idx].columns.length) {\n                            cell.headerAttributes.colSpan = visibleChildColumns(columns[idx].columns).length || 1;\n                            cell.headerAttributes['data-colspan'] = leafColumns(columns[idx].columns).length;\n                        }\n                        this._prepareColumns(rows, columns[idx].columns, cell, childRow, columns[idx]);\n                        if (!cell.hidden) {\n                            totalColSpan += cell.headerAttributes.colSpan - 1;\n                        }\n                        row.rowSpan = rows.length - row.index;\n                    }\n                    columns[idx].rowIndex = row.index;\n                    if (parentColumn) {\n                        columns[idx].parentColumn = parentColumn;\n                    }\n                    columns[idx].cellIndex = row.cells.length - 1;\n                }\n                if (parentCell) {\n                    parentCell.headerAttributes.colSpan += totalColSpan;\n                }\n            },\n            _renderHeaderTree: function (tree, columns, hasMultiColumnHeaders) {\n                var idx;\n                var rows = [];\n                var rowsToRender = [];\n                if (hasMultiColumnHeaders) {\n                    rows = [{\n                            rowSpan: 1,\n                            cells: [],\n                            index: 0\n                        }];\n                    this._prepareColumns(rows, columns);\n                    this._updateRowSpans(rows);\n                    for (idx = 0; idx < rows.length; idx++) {\n                        rowsToRender.push(kendoDomElement('tr', { 'role': 'row' }, this._ths(rows[idx].cells, rows[idx].rowSpan)));\n                    }\n                    tree.render(rowsToRender);\n                } else {\n                    tree.render([kendoDomElement('tr', { 'role': 'row' }, this._ths(columns))]);\n                }\n            },\n            _renderHeader: function () {\n                var columns = nonLockedColumns(this.columns);\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                this._setColumnDataIndexes(leafColumns(this.columns));\n                this._renderHeaderTree(this._headerTree, columns, hasMultiColumnHeaders);\n                if (this._hasLockedColumns) {\n                    columns = lockedColumns(this.columns);\n                    this._renderHeaderTree(this._lockedHeaderTree, columns, hasMultiColumnHeaders);\n                    this._applyLockedContainersWidth();\n                    this._syncLockedHeaderHeight();\n                }\n                this._updateFirstColumnClass();\n            },\n            _applyLockedContainersWidth: function () {\n                if (!this._hasLockedColumns) {\n                    return;\n                }\n                var lockedWidth = columnsWidth(this.lockedHeader.find('>table>colgroup>col'));\n                var headerTable = this.thead.parent();\n                var nonLockedWidth = columnsWidth(headerTable.find('>colgroup>col'));\n                var wrapperWidth = this.wrapper[0].clientWidth;\n                var scrollbar = kendo.support.scrollbar();\n                if (lockedWidth >= wrapperWidth) {\n                    lockedWidth = wrapperWidth - 3 * scrollbar;\n                }\n                this.lockedHeader.add(this.lockedContent).width(lockedWidth);\n                headerTable.add(this.table).width(nonLockedWidth);\n                var width = wrapperWidth - lockedWidth - 2;\n                this.content.width(width);\n                headerTable.parent().width(width - scrollbar);\n            },\n            _trs: function (options) {\n                var that = this;\n                var model, attr, className, hasChildren, childNodes, i, length;\n                var modelId;\n                var rows = [];\n                var level = options.level;\n                var data = options.data;\n                var dataSource = this.dataSource;\n                var aggregates = dataSource.aggregates() || {};\n                var idField = dataSource._modelIdField();\n                var parentIdField = dataSource._modelParentIdField();\n                var columns = options.columns;\n                var pageable = that._isPageable();\n                var childrenMap = options.childrenMap || dataSource.childrenMap(dataSource._getData());\n                for (i = 0, length = data.length; i < length; i++) {\n                    className = [];\n                    model = data[i];\n                    modelId = model[idField];\n                    childNodes = pageable ? childrenMap[modelId] : model.loaded() ? dataSource.childNodes(model) : [];\n                    hasChildren = childNodes && childNodes.length;\n                    attr = { 'role': 'row' };\n                    attr[kendo.attr('uid')] = model.uid;\n                    if (hasChildren) {\n                        attr['aria-expanded'] = !!model.expanded;\n                    }\n                    if (options.visible) {\n                        if (!pageable || pageable && !that._skipRenderingMap[modelId]) {\n                            if (this._absoluteIndex % 2 !== 0) {\n                                className.push(classNames.alt);\n                            }\n                            this._absoluteIndex++;\n                        }\n                    } else {\n                        attr.style = { display: 'none' };\n                    }\n                    if ($.inArray(model.uid, options.selected) >= 0) {\n                        className.push(classNames.selected);\n                    }\n                    if (hasChildren) {\n                        className.push(classNames.group);\n                    }\n                    if (model._edit) {\n                        className.push('k-grid-edit-row');\n                    }\n                    attr.className = className.join(' ');\n                    if (!that._skipRenderingMap[modelId]) {\n                        var row = this._tds({\n                            model: model,\n                            attr: attr,\n                            level: pageable ? that._renderedModelLevel(model, options) : level,\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex\n                        }, columns, proxy(this._td, this));\n                        rows.push(row);\n                    }\n                    if (hasChildren) {\n                        if (pageable) {\n                            childNodes = (options.viewChildrenMap || {})[modelId] || [];\n                        }\n                        if (childNodes.length === 0) {\n                            continue;\n                        }\n                        rows = rows.concat(this._trs({\n                            columns: columns,\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            aggregates: aggregates,\n                            selected: options.selected,\n                            visible: pageable ? options.visible : options.visible && !!model.expanded,\n                            data: childNodes,\n                            childrenMap: options.childrenMap || childrenMap,\n                            viewChildrenMap: options.viewChildrenMap,\n                            level: level + 1\n                        }));\n                    }\n                }\n                if (this._hasFooterTemplate() && model) {\n                    attr = {\n                        className: classNames.footerTemplate,\n                        'data-parentId': model[parentIdField]\n                    };\n                    if (!options.visible) {\n                        attr.style = { display: 'none' };\n                    }\n                    rows.push(this._tds({\n                        model: aggregates[model[parentIdField]],\n                        attr: attr,\n                        level: level,\n                        editedColumn: options.editedColumn,\n                        editedColumnIndex: options.editedColumnIndex\n                    }, columns, this._footerId));\n                }\n                return rows;\n            },\n            _footerId: function (options) {\n                var content = [];\n                var column = options.column;\n                var template = options.column.footerTemplate || $.noop;\n                var aggregates = options.model[column.field] || {};\n                var attr = {\n                    'role': 'gridcell',\n                    'style': column.hidden === true ? { 'display': 'none' } : {}\n                };\n                if (column.expandable) {\n                    content = content.concat(createPlaceholders({\n                        level: options.level + 1,\n                        className: classNames.iconPlaceHolder\n                    }));\n                }\n                if (column.attributes) {\n                    extend(attr, column.attributes);\n                }\n                content.push(kendoHtmlElement(template(aggregates) || ''));\n                return kendoDomElement('td', attr, content);\n            },\n            _hasFooterTemplate: function () {\n                return !!grep(this.columns, function (c) {\n                    return c.footerTemplate;\n                }).length;\n            },\n            _tds: function (options, columns, renderer) {\n                var children = [];\n                var column;\n                var editedColumnField = (options.editedColumn || {}).field;\n                var incellEditing = this._isIncellEditable();\n                var length = columns.length;\n                for (var i = 0; i < length; i++) {\n                    column = columns[i];\n                    var col = renderer({\n                        model: options.model,\n                        column: column,\n                        editColumn: !incellEditing || incellEditing && column.field === editedColumnField && options.editedColumnIndex === i,\n                        level: options.level\n                    });\n                    children.push(col);\n                }\n                return kendoDomElement('tr', options.attr, children);\n            },\n            _td: function (options) {\n                var children = [];\n                var model = options.model;\n                var column = options.column;\n                var iconClass;\n                var attr = {\n                    'role': 'gridcell',\n                    'style': column.hidden === true ? { 'display': 'none' } : {}\n                };\n                var incellEditing = this._isIncellEditable();\n                if (column.attributes) {\n                    extend(true, attr, column.attributes);\n                }\n                if (model._edit && column.field && options.editColumn && (incellEditing || !incellEditing && isColumnEditable(column, model))) {\n                    attr[kendo.attr('container-for')] = column.field;\n                    if (incellEditing) {\n                        if (attr.className && attr.className.indexOf(classNames.editCell) !== -1) {\n                            attr.className += ' ' + classNames.editCell;\n                        } else if (!attr.className) {\n                            attr.className = classNames.editCell;\n                        }\n                    }\n                } else {\n                    if (column.expandable) {\n                        children = createPlaceholders({\n                            level: options.level,\n                            className: classNames.iconPlaceHolder\n                        });\n                        iconClass = [classNames.icon];\n                        if (model.hasChildren) {\n                            iconClass.push(model.expanded ? classNames.iconCollapse : classNames.iconExpand);\n                        } else {\n                            iconClass.push(classNames.iconHidden);\n                        }\n                        if (model._error) {\n                            iconClass.push(classNames.refresh);\n                        } else if (!model.loaded() && model.expanded) {\n                            iconClass.push(classNames.loading);\n                        }\n                        children.push(kendoDomElement('span', { className: iconClass.join(' ') }));\n                        attr.style['white-space'] = 'nowrap';\n                    }\n                    if (isDirtyColumn(column, model)) {\n                        if (attr.className) {\n                            attr.className += classNames.dirtyCell;\n                        } else if (!attr.className) {\n                            attr.className = classNames.dirtyCell;\n                        }\n                    }\n                    if (column.command) {\n                        if (attr.className && attr.className.indexOf('k-command-cell') !== -1) {\n                            attr.className += ' k-command-cell';\n                        } else if (!attr.className) {\n                            attr.className = 'k-command-cell';\n                        }\n                        if (model._edit && !this._isIncellEditable()) {\n                            children = this._buildCommands([\n                                'update',\n                                'canceledit'\n                            ]);\n                        } else {\n                            children = this._buildCommands(column.command);\n                        }\n                    } else {\n                        children.push(this._cellContent(column, model));\n                    }\n                }\n                return kendoDomElement('td', attr, children);\n            },\n            _cellContent: function (column, model) {\n                var that = this;\n                var value;\n                var incellEditing = that._isIncellEditable();\n                var dirtyIndicator = incellEditing ? that._evalDirtyIndicatorTemplate(column, model) : '';\n                if (column.template) {\n                    value = that._evalColumnTemplate(column, model);\n                } else if (column.field) {\n                    value = model.get(column.field);\n                    if (value !== null && !isUndefined(value)) {\n                        if (column.format) {\n                            value = kendo.format(column.format, value);\n                        }\n                        value = dirtyIndicator + value;\n                    } else {\n                        value = dirtyIndicator;\n                    }\n                } else if (value === null || isUndefined(value)) {\n                    value = '';\n                }\n                if (column.template || !column.encoded) {\n                    return kendoHtmlElement(value);\n                } else {\n                    if (incellEditing) {\n                        return kendoHtmlElement(value);\n                    } else {\n                        return kendoTextElement(value);\n                    }\n                }\n            },\n            _evalColumnTemplate: function (column, model) {\n                if (this._isIncellEditable()) {\n                    return this._evalCustomColumnTemplate(column, model);\n                } else {\n                    return column.template(model);\n                }\n            },\n            _evalCustomColumnTemplate: function (column, model) {\n                var that = this;\n                var templateSettings = that._customTemplateSettings();\n                var columnTemplateAlias = '#=this.columnTemplate(' + templateSettings.paramName + ')#';\n                var templateString = that._dirtyIndicatorTemplate(column.field) + columnTemplateAlias;\n                var templateFunction = proxy(kendoTemplate(templateString, templateSettings), { columnTemplate: column.template });\n                return templateFunction(model);\n            },\n            _evalDirtyIndicatorTemplate: function (column, model) {\n                var dirtyIndicatorTemplate = this._dirtyIndicatorTemplate(column.field);\n                return kendoTemplate(dirtyIndicatorTemplate)(model);\n            },\n            _dirtyIndicatorTemplate: function (field) {\n                var that = this;\n                var dirtyField;\n                var templateSettings = that._customTemplateSettings();\n                var paramName = templateSettings.paramName;\n                if (field && paramName) {\n                    dirtyField = field.charAt(0) === '[' ? kendo.expr(field, paramName + '.dirtyFields') : paramName + '.dirtyFields[\\'' + field + '\\']';\n                    return '#= ' + paramName + ' && ' + paramName + '.dirty && ' + paramName + '.dirtyFields && ' + dirtyField + ' ? \\'<span class=\"k-dirty\"></span>\\' : \\'\\' #';\n                }\n                return '';\n            },\n            _customTemplateSettings: function () {\n                return extend({}, kendo.Template, this.options.templateSettings);\n            },\n            _buildCommands: function (commands) {\n                var i, result = [];\n                for (i = 0; i < commands.length; i++) {\n                    result.push(this._button(commands[i]));\n                }\n                return result;\n            },\n            _button: function (command) {\n                var name = (command.name || command).toLowerCase();\n                var text = this.options.messages.commands[name];\n                var icon = [];\n                command = extend({}, defaultCommands[name], { text: text }, command);\n                if (command.imageClass) {\n                    icon.push(kendoDomElement('span', {\n                        className: [\n                            'k-icon',\n                            command.imageClass\n                        ].join(' ')\n                    }));\n                }\n                return kendoDomElement('button', {\n                    'type': 'button',\n                    'data-command': name,\n                    className: [\n                        'k-button',\n                        'k-button-icontext',\n                        command.className\n                    ].join(' ')\n                }, icon.concat([kendoTextElement(command.text || command.name)]));\n            },\n            _positionResizeHandle: function (e) {\n                var th = $(e.currentTarget);\n                var resizeHandle = this.resizeHandle;\n                var position = th.position();\n                var left;\n                var cellWidth = outerWidth(th);\n                var container = th.closest('div');\n                var clientX = e.clientX + $(window).scrollLeft();\n                var indicatorWidth = this.options.columnResizeHandleWidth || 3;\n                left = cellWidth;\n                if (!resizeHandle) {\n                    resizeHandle = this.resizeHandle = $('<div class=\"k-resize-handle\"><div class=\"k-resize-handle-inner\" /></div>');\n                }\n                var cells = leafDataCells(th.closest('thead')).filter(':visible');\n                for (var idx = 0; idx < cells.length; idx++) {\n                    if (cells[idx] == th[0]) {\n                        break;\n                    }\n                    left += cells[idx].offsetWidth;\n                }\n                var cellOffset = th.offset().left + cellWidth;\n                var show = clientX > cellOffset - indicatorWidth && clientX < cellOffset + indicatorWidth;\n                if (!show) {\n                    resizeHandle.hide();\n                    return;\n                }\n                container.append(resizeHandle);\n                resizeHandle.show().css({\n                    top: position.top,\n                    left: left - indicatorWidth - 1,\n                    height: outerHeight(th),\n                    width: indicatorWidth * 3\n                }).data('th', th);\n                var that = this;\n                resizeHandle.off('dblclick' + NS).on('dblclick' + NS, function () {\n                    var index = th.index();\n                    if ($.contains(that.thead[0], th[0])) {\n                        index += grep(that.columns, function (val) {\n                            return val.locked && !val.hidden;\n                        }).length;\n                    }\n                    that.autoFitColumn(index);\n                });\n            },\n            autoFitColumn: function (column) {\n                var that = this, options = that.options, columns = that.columns, index, browser = kendo.support.browser, th, headerTable, isLocked, visibleLocked = that.lockedHeader ? leafDataCells(that.lockedHeader.find('>table>thead')).filter(isCellVisible).length : 0, col;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else if (isPlainObject(column)) {\n                    column = grep(columns, function (item) {\n                        return item === column;\n                    })[0];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                index = inArray(column, columns);\n                isLocked = column.locked;\n                if (isLocked) {\n                    headerTable = that.lockedHeader.children('table');\n                } else {\n                    headerTable = that.thead.parent();\n                }\n                th = headerTable.find('[data-index=\\'' + index + '\\']');\n                var contentTable = isLocked ? that.lockedTable : that.table, footer = that.footer || $();\n                if (that.footer && that.lockedContent) {\n                    footer = isLocked ? that.footer.children('.k-grid-footer-locked') : that.footer.children('.k-grid-footer-wrap');\n                }\n                var footerTable = footer.find('table').first();\n                if (that.lockedHeader && visibleLocked >= index && !isLocked) {\n                    index -= visibleLocked;\n                }\n                for (var j = 0; j < columns.length; j++) {\n                    if (columns[j] === column) {\n                        break;\n                    } else {\n                        if (columns[j].hidden) {\n                            index--;\n                        }\n                    }\n                }\n                if (options.scrollable) {\n                    col = headerTable.find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')').add(contentTable.children('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')')).add(footerTable.find('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')'));\n                } else {\n                    col = contentTable.children('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')');\n                }\n                var tables = headerTable.add(contentTable).add(footerTable);\n                var oldColumnWidth = outerWidth(th);\n                col.width('');\n                tables.css('table-layout', 'fixed');\n                col.width('auto');\n                tables.addClass('k-autofitting');\n                tables.css('table-layout', '');\n                var newColumnWidth = Math.ceil(Math.max(outerWidth(th), outerWidth(contentTable.find('tr').eq(0).children('td:visible').eq(index)), outerWidth(footerTable.find('tr').eq(0).children('td:visible').eq(index))));\n                col.width(newColumnWidth);\n                column.width = newColumnWidth;\n                if (options.scrollable) {\n                    var cols = headerTable.find('col'), colWidth, totalWidth = 0;\n                    for (var idx = 0, length = cols.length; idx < length; idx += 1) {\n                        colWidth = cols[idx].style.width;\n                        if (colWidth && colWidth.indexOf('%') == -1) {\n                            totalWidth += parseInt(colWidth, 10);\n                        } else {\n                            totalWidth = 0;\n                            break;\n                        }\n                    }\n                    if (totalWidth) {\n                        tables.each(function () {\n                            this.style.width = totalWidth + 'px';\n                        });\n                    }\n                }\n                if (browser.msie && browser.version == 8) {\n                    tables.css('display', 'inline-table');\n                    setTimeout(function () {\n                        tables.css('display', 'table');\n                    }, 1);\n                }\n                tables.removeClass('k-autofitting');\n                that.trigger(COLUMNRESIZE, {\n                    column: column,\n                    oldWidth: oldColumnWidth,\n                    newWidth: newColumnWidth\n                });\n                that._applyLockedContainersWidth();\n                that._syncLockedContentHeight();\n                that._syncLockedHeaderHeight();\n            },\n            _adjustLockedHorizontalScrollBar: function () {\n                var table = this.table, content = table.parent();\n                var scrollbar = table[0].offsetWidth > content[0].clientWidth ? kendo.support.scrollbar() : 0;\n                this.lockedContent.height(content.height() - scrollbar);\n            },\n            _syncLockedContentHeight: function () {\n                if (this.lockedTable) {\n                    if (!this._touchScroller) {\n                        this._adjustLockedHorizontalScrollBar();\n                    }\n                    this._adjustRowsHeight(this.table, this.lockedTable);\n                }\n            },\n            _syncLockedHeaderHeight: function () {\n                if (this.lockedHeader) {\n                    var lockedTable = this.lockedHeader.children('table');\n                    var table = this.thead.parent();\n                    this._adjustRowsHeight(lockedTable, table);\n                    syncTableHeight(lockedTable, table);\n                }\n            },\n            _resizable: function () {\n                if (!this.options.resizable) {\n                    return;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                }\n                var treelist = this;\n                $(this.lockedHeader).find('thead').add(this.thead).on('mousemove' + NS, 'th', $.proxy(this._positionResizeHandle, this));\n                this.resizable = new kendo.ui.Resizable(this.wrapper, {\n                    handle: '.k-resize-handle',\n                    start: function (e) {\n                        var th = $(e.currentTarget).data('th');\n                        var index = $.inArray(th[0], leafDataCells(th.closest('thead')).filter(':visible'));\n                        var colSelector = 'col:eq(' + index + ')';\n                        var header, contentTable;\n                        treelist.wrapper.addClass('k-grid-column-resizing');\n                        if (treelist.lockedHeader && $.contains(treelist.lockedHeader[0], th[0])) {\n                            header = treelist.lockedHeader;\n                            contentTable = treelist.lockedTable;\n                        } else {\n                            header = treelist.thead.parent();\n                            contentTable = treelist.table;\n                        }\n                        this.col = contentTable.children('colgroup').find(colSelector).add(header.find(colSelector));\n                        this.th = th;\n                        this.startLocation = e.x.location;\n                        this.columnWidth = outerWidth(th);\n                        this.table = this.col.closest('table');\n                        this.totalWidth = this.table.width();\n                    },\n                    resize: function (e) {\n                        var minColumnWidth = 11;\n                        var delta = e.x.location - this.startLocation;\n                        if (this.columnWidth + delta < minColumnWidth) {\n                            delta = minColumnWidth - this.columnWidth;\n                        }\n                        this.table.width(this.totalWidth + delta);\n                        this.col.width(this.columnWidth + delta);\n                    },\n                    resizeend: function () {\n                        treelist.wrapper.removeClass('k-grid-column-resizing');\n                        var field = this.th.attr('data-field');\n                        var column = grep(leafColumns(treelist.columns), function (c) {\n                            return c.field == field;\n                        });\n                        var newWidth = Math.floor(outerWidth(this.th));\n                        column[0].width = newWidth;\n                        treelist._resize();\n                        treelist._syncLockedContentHeight();\n                        treelist._syncLockedHeaderHeight();\n                        treelist.trigger(COLUMNRESIZE, {\n                            column: column,\n                            oldWidth: this.columnWidth,\n                            newWidth: newWidth\n                        });\n                        this.table = this.col = this.th = null;\n                    }\n                });\n            },\n            _sortable: function () {\n                var columns;\n                var column;\n                var sortableInstance;\n                var cells;\n                var cell, idx, length;\n                var sortable = this.options.sortable;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (!sortable) {\n                    return;\n                }\n                if (hasMultiColumnHeaders) {\n                    if (this.lockedHeader) {\n                        cells = sortCells(leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead)));\n                    } else {\n                        cells = leafDataCells(this.thead);\n                    }\n                } else {\n                    cells = $(this.lockedHeader).add(this.thead).find('th');\n                }\n                columns = leafColumns(this.columns);\n                for (idx = 0, length = cells.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.sortable !== false && !column.command && column.field) {\n                        cell = cells.eq(idx);\n                        sortableInstance = cell.data('kendoColumnSorter');\n                        if (sortableInstance) {\n                            sortableInstance.destroy();\n                        }\n                        cell.kendoColumnSorter(extend({}, sortable, column.sortable, { dataSource: this.dataSource }));\n                    }\n                }\n            },\n            _filterable: function () {\n                var cells;\n                var filterable = this.options.filterable;\n                var idx;\n                var length;\n                var columns;\n                var column;\n                var cell;\n                var filterMenuInstance;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (!filterable || this.options.columnMenu) {\n                    return;\n                }\n                var filterInit = proxy(function (e) {\n                    this.trigger(FILTERMENUINIT, {\n                        field: e.field,\n                        container: e.container\n                    });\n                }, this);\n                var filterOpen = proxy(function (e) {\n                    this.trigger(FILTERMENUOPEN, {\n                        field: e.field,\n                        container: e.container\n                    });\n                }, this);\n                if (hasMultiColumnHeaders) {\n                    if (this.lockedHeader) {\n                        cells = leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead));\n                    } else {\n                        cells = leafDataCells(this.thead);\n                    }\n                } else {\n                    cells = $(this.lockedHeader).add(this.thead).find('th');\n                }\n                columns = leafColumns(this.columns);\n                for (idx = 0, length = cells.length; idx < length; idx++) {\n                    column = columns[idx];\n                    cell = cells.eq(idx);\n                    filterMenuInstance = cell.data('kendoFilterMenu');\n                    if (filterMenuInstance) {\n                        filterMenuInstance.destroy();\n                    }\n                    if (column.command || column.filterable === false) {\n                        continue;\n                    }\n                    cell.kendoFilterMenu(extend(true, {}, filterable, column.filterable, {\n                        dataSource: this.dataSource,\n                        init: filterInit,\n                        open: filterOpen\n                    }));\n                }\n            },\n            _change: function () {\n                this.trigger(CHANGE);\n            },\n            _isLocked: function () {\n                return this.lockedHeader !== null;\n            },\n            _selectable: function () {\n                var that = this;\n                var selectable = this.options.selectable;\n                var filter;\n                var element = this.table;\n                var useAllItems;\n                var isLocked = that._isLocked();\n                var multi;\n                var cell;\n                if (selectable) {\n                    selectable = kendo.ui.Selectable.parseOptions(selectable);\n                    if (this._hasLockedColumns) {\n                        element = element.add(this.lockedTable);\n                        useAllItems = selectable.multiple && selectable.cell;\n                    }\n                    filter = '>tbody>tr:not(.k-footer-template)';\n                    if (selectable.cell) {\n                        filter = filter + '>td';\n                    }\n                    this.selectable = new kendo.ui.Selectable(element, {\n                        filter: filter,\n                        aria: true,\n                        multiple: selectable.multiple,\n                        change: proxy(this._change, this),\n                        useAllItems: useAllItems,\n                        continuousItems: proxy(this._continuousItems, this, filter, selectable.cell),\n                        relatedTarget: !selectable.cell && this._hasLockedColumns ? proxy(this._selectableTarget, this) : undefined\n                    });\n                    if (that.options.navigatable) {\n                        multi = selectable.multiple;\n                        cell = selectable.cell;\n                        element.on('keydown' + NS, function (e) {\n                            var current = that.current();\n                            var target = e.target;\n                            if (e.keyCode === keys.SPACEBAR && !e.shiftKey && $.inArray(target, element) > -1 && !current.is('.k-header')) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                current = cell ? current : current.parent();\n                                if (isLocked && !cell) {\n                                    current = current.add(that._relatedRow(current));\n                                }\n                                if (multi) {\n                                    if (!e.ctrlKey) {\n                                        that.selectable.clear();\n                                    } else {\n                                        if (current.hasClass(classNames.selected)) {\n                                            current.removeClass(classNames.selected);\n                                            that.trigger(CHANGE);\n                                            return;\n                                        }\n                                    }\n                                } else {\n                                    that.selectable.clear();\n                                }\n                                if (!cell) {\n                                    that.selectable._lastActive = current;\n                                }\n                                that.selectable.value(current);\n                            } else if (!cell && (e.shiftKey && e.keyCode == keys.LEFT || e.shiftKey && e.keyCode == keys.RIGHT || e.shiftKey && e.keyCode == keys.UP || e.shiftKey && e.keyCode == keys.DOWN || e.keyCode === keys.SPACEBAR && e.shiftKey)) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                current = current.parent();\n                                if (isLocked) {\n                                    current = current.add(that._relatedRow(current));\n                                }\n                                if (multi) {\n                                    if (!that.selectable._lastActive) {\n                                        that.selectable._lastActive = current;\n                                    }\n                                    that.selectable.selectRange(that.selectable._firstSelectee(), current);\n                                } else {\n                                    that.selectable.clear();\n                                    that.selectable.value(current);\n                                }\n                            }\n                        });\n                    }\n                }\n            },\n            _continuousItems: function (filter, cell) {\n                if (!this.lockedContent) {\n                    return;\n                }\n                var lockedItems = $(filter, this.lockedTable);\n                var nonLockedItems = $(filter, this.table);\n                var columns = cell ? lockedColumns(this.columns).length : 1;\n                var nonLockedColumns = cell ? this.columns.length - columns : 1;\n                var result = [];\n                for (var idx = 0; idx < lockedItems.length; idx += columns) {\n                    push.apply(result, lockedItems.slice(idx, idx + columns));\n                    push.apply(result, nonLockedItems.splice(0, nonLockedColumns));\n                }\n                return result;\n            },\n            _selectableTarget: function (items) {\n                var related;\n                var result = $();\n                for (var idx = 0, length = items.length; idx < length; idx++) {\n                    related = this._relatedRow(items[idx]);\n                    if (inArray(related[0], items) < 0) {\n                        result = result.add(related);\n                    }\n                }\n                return result;\n            },\n            _relatedRow: function (row) {\n                var lockedTable = this.lockedTable;\n                row = $(row);\n                if (!lockedTable) {\n                    return row;\n                }\n                var table = row.closest(this.table.add(this.lockedTable));\n                var index = table.find('>tbody>tr').index(row);\n                table = table[0] === this.table[0] ? lockedTable : this.table;\n                return table.find('>tbody>tr').eq(index);\n            },\n            select: function (value) {\n                var selectable = this.selectable;\n                if (!selectable) {\n                    return $();\n                }\n                if (typeof value !== 'undefined') {\n                    if (!selectable.options.multiple) {\n                        selectable.clear();\n                        value = value.first();\n                    }\n                    if (this._hasLockedColumns) {\n                        value = value.add($.map(value, proxy(this._relatedRow, this)));\n                    }\n                }\n                return selectable.value(value);\n            },\n            clearSelection: function () {\n                var selected = this.select();\n                if (selected.length) {\n                    this.selectable.clear();\n                    this.trigger(CHANGE);\n                }\n            },\n            _dataSource: function (dataSource) {\n                var that = this;\n                var ds = this.dataSource;\n                var pageable = that.options.pageable;\n                if (ds) {\n                    ds.unbind(CHANGE, this._refreshHandler);\n                    ds.unbind(ERROR, this._errorHandler);\n                    ds.unbind(PROGRESS, this._progressHandler);\n                }\n                this._refreshHandler = proxy(this.refresh, this);\n                this._errorHandler = proxy(this._error, this);\n                this._progressHandler = proxy(this._progress, this);\n                if (isPlainObject(dataSource)) {\n                    extend(dataSource, {\n                        table: that.table,\n                        fields: that.columns\n                    });\n                    if (isPlainObject(pageable) && pageable.pageSize !== undefined) {\n                        dataSource.pageSize = pageable.pageSize;\n                    }\n                }\n                ds = this.dataSource = TreeListDataSource.create(dataSource);\n                if (pageable) {\n                    ds._collapsedTotal = undefined;\n                }\n                ds.bind(CHANGE, this._refreshHandler);\n                ds.bind(ERROR, this._errorHandler);\n                ds.bind(PROGRESS, this._progressHandler);\n                this._dataSourceFetchProxy = proxy(function () {\n                    this.dataSource.fetch();\n                }, this);\n            },\n            setDataSource: function (dataSource) {\n                this._dataSource(dataSource);\n                this._sortable();\n                this._filterable();\n                this._pageable();\n                this._contentTree.render([]);\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            dataItem: function (element) {\n                if (element instanceof TreeListModel) {\n                    return element;\n                }\n                var row = $(element).closest('tr');\n                var uid = row.attr(kendo.attr('uid'));\n                var model = isUndefined(uid) ? null : this.dataSource.getByUid(uid);\n                return model;\n            },\n            editRow: function (row) {\n                var that = this;\n                var model;\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                if (typeof row === STRING) {\n                    row = this.tbody.find(row);\n                }\n                if (that._isPageable() && that._isPopupEditable() && row instanceof TreeListModel) {\n                    model = row;\n                } else {\n                    model = this.dataItem(row);\n                }\n                if (!model) {\n                    return;\n                }\n                if (this._editMode() != 'popup') {\n                    model._edit = true;\n                }\n                this._cancelEditor();\n                if (this.trigger(BEFORE_EDIT, { model: model })) {\n                    return;\n                }\n                this._render();\n                this._createEditor(model);\n                this.trigger(EDIT, {\n                    container: this.editor.wrapper,\n                    model: model\n                });\n            },\n            _cancelEdit: function (e) {\n                if (!this.editor) {\n                    return;\n                }\n                var currentIndex;\n                e = extend(e, {\n                    container: this.editor.wrapper,\n                    model: this.editor.model\n                });\n                if (this.trigger(CANCEL, e)) {\n                    return;\n                }\n                if (this.options.navigatable) {\n                    currentIndex = this.items().index($(this.current()).parent());\n                }\n                this.cancelRow();\n                if (this.options.navigatable) {\n                    this.current(this.items().eq(currentIndex).children().filter(NAVCELL).first());\n                    focusTable(this.table, true);\n                }\n            },\n            cancelRow: function () {\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                this._cancelEditor();\n                this._render();\n            },\n            saveRow: function () {\n                var editor = this.editor;\n                var args;\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                if (!editor) {\n                    return;\n                }\n                args = {\n                    model: editor.model,\n                    container: editor.wrapper\n                };\n                if (editor.end() && !this.trigger(SAVE, args)) {\n                    this.dataSource.sync();\n                }\n            },\n            addRow: function (parent) {\n                var editor = this.editor;\n                var index = 0;\n                var model = {};\n                if (editor && !editor.end()) {\n                    return;\n                }\n                if (parent) {\n                    if (!(parent instanceof TreeListModel)) {\n                        parent = this.dataItem(parent);\n                    }\n                    model[parent.parentIdField] = parent.id;\n                    index = this.dataSource.indexOf(parent) + 1;\n                    this.expand(parent).then(proxy(this._insertAt, this, model, index));\n                    return;\n                }\n                this._insertAt(model, index);\n            },\n            _insertAt: function (model, index) {\n                var that = this;\n                model = that.dataSource.insert(index, model);\n                var row = this.itemFor(model);\n                var cell;\n                if (that._isIncellEditable()) {\n                    cell = row.children('td').eq(that._firstEditableColumnIndex(row));\n                    that.editCell(cell);\n                } else if (row && row[0]) {\n                    that.editRow(row);\n                } else if (that._isPageable() && that._isPopupEditable()) {\n                    that.editRow(model);\n                }\n            },\n            _firstEditableColumnIndex: function (container) {\n                var that = this;\n                var model = that.dataItem(container);\n                var columns = leafColumns(that.columns);\n                var length = columns.length;\n                var column;\n                var idx;\n                for (idx = 0; idx < length; idx++) {\n                    column = columns[idx];\n                    if (model && (!model.editable || model.editable(column.field)) && !column.command && column.field && column.hidden !== true) {\n                        return idx;\n                    }\n                }\n                return -1;\n            },\n            removeRow: function (row) {\n                var model = this.dataItem(row);\n                var args = {\n                    model: model,\n                    row: row\n                };\n                if (model && !this.trigger(REMOVE, args)) {\n                    this.dataSource.remove(model);\n                    if (!this._isIncellEditable()) {\n                        this.dataSource.sync();\n                    }\n                }\n            },\n            _cancelEditor: function () {\n                var that = this;\n                var model;\n                var editor = that.editor;\n                if (editor) {\n                    model = editor.model;\n                    that._destroyEditor();\n                    if (!that._isIncellEditable()) {\n                        that.dataSource.cancelChanges(model);\n                    }\n                    model._edit = false;\n                }\n            },\n            _destroyEditor: function () {\n                if (!this.editor) {\n                    return;\n                }\n                this.editor.close();\n                this.editor = null;\n            },\n            _createEditor: function (model) {\n                var row = this.itemFor(model);\n                var columns = leafColumns(this.columns);\n                var leafCols = [];\n                for (var idx = 0; idx < columns.length; idx++) {\n                    leafCols.push(extend({}, columns[idx]));\n                    delete leafCols[idx].parentColumn;\n                }\n                row = row.add(this._relatedRow(row));\n                var mode = this._editMode();\n                var options = {\n                    columns: leafCols,\n                    model: model,\n                    target: this,\n                    clearContainer: false,\n                    template: this.options.editable.template\n                };\n                if (mode == 'inline') {\n                    this.editor = new Editor(row, options);\n                } else {\n                    extend(options, {\n                        window: this.options.editable.window,\n                        commandRenderer: proxy(function () {\n                            return this._buildCommands([\n                                'update',\n                                'canceledit'\n                            ]);\n                        }, this),\n                        fieldRenderer: proxy(this._cellContent, this),\n                        save: proxy(this.saveRow, this),\n                        cancel: proxy(this._cancelEdit, this),\n                        appendTo: this.wrapper\n                    });\n                    this.editor = new PopupEditor(row, options);\n                }\n            },\n            _createIncellEditor: function (cell, options) {\n                var that = this;\n                var column = extend({}, options.columns[0]);\n                delete column.parentColumn;\n                return new IncellEditor(cell, extend({}, {\n                    fieldRenderer: proxy(that._cellContent, that),\n                    appendTo: that.wrapper,\n                    clearContainer: false,\n                    target: that,\n                    columns: [column],\n                    model: options.model,\n                    change: options.change\n                }));\n            },\n            editCell: function (cell) {\n                var that = this;\n                cell = $(cell);\n                var column = leafColumns(that.columns)[that.cellIndex(cell)];\n                var model = that.dataItem(cell);\n                if (that._isIncellEditable() && model && isColumnEditable(column, model)) {\n                    that._editCell(cell, column, model);\n                }\n            },\n            _editCell: function (cell, column, model) {\n                var that = this;\n                var editedCell;\n                if (that.trigger(BEFORE_EDIT, { model: model })) {\n                    return;\n                }\n                that.closeCell();\n                model._edit = true;\n                that._cancelEditor();\n                that._render({\n                    editedColumn: column,\n                    editedColumnIndex: cell.index()\n                });\n                editedCell = that.table.add(that.lockedTable).find(DOT + classNames.editCell).first();\n                that.editor = that._createIncellEditor(editedCell, {\n                    columns: [column],\n                    model: model,\n                    change: function (e) {\n                        if (that.trigger(SAVE, {\n                                values: e.values,\n                                container: cell,\n                                model: model\n                            })) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n                that._current = editedCell;\n                that.trigger(EDIT, {\n                    container: cell,\n                    model: model\n                });\n            },\n            closeCell: function (isCancel) {\n                var that = this;\n                var cell = (that.editor || {}).element;\n                var tr;\n                var model;\n                if (!cell || !cell[0] || !that._isIncellEditable()) {\n                    return;\n                }\n                model = that.dataItem(cell);\n                if (isCancel && that.trigger(CANCEL, {\n                        container: cell,\n                        model: model\n                    })) {\n                    return;\n                }\n                that.trigger(CELL_CLOSE, {\n                    type: isCancel ? CANCEL : SAVE,\n                    model: model,\n                    container: cell\n                });\n                cell.removeClass(classNames.editCell);\n                tr = cell.parent().removeClass(classNames.editRow);\n                if (that.lockedContent) {\n                    that._relatedRow(tr).removeClass(classNames.editRow);\n                }\n                that._cancelEditor();\n                that._render();\n                that.trigger(ITEM_CHANGE, {\n                    item: tr,\n                    data: model,\n                    ns: ui\n                });\n                if (that.lockedContent) {\n                    adjustRowHeight(tr.css('height', '')[0], that._relatedRow(tr).css('height', '')[0]);\n                }\n            },\n            cancelChanges: function () {\n                this.dataSource.cancelChanges();\n            },\n            saveChanges: function () {\n                var that = this;\n                var editable = (that.editor || {}).editable;\n                var valid = editable && editable.end();\n                if ((valid || !editable) && !that.trigger(SAVE_CHANGES)) {\n                    that.dataSource.sync();\n                }\n            },\n            _editMode: function () {\n                var mode = 'inline', editable = this.options.editable;\n                if (editable !== true) {\n                    if (typeof editable == 'string') {\n                        mode = editable;\n                    } else {\n                        mode = editable.mode || mode;\n                    }\n                }\n                return mode.toLowerCase();\n            },\n            _isIncellEditable: function () {\n                return this._editMode() === INCELL;\n            },\n            _isPopupEditable: function () {\n                return this._editMode() === POPUP;\n            },\n            hideColumn: function (column) {\n                this._toggleColumnVisibility(column, true);\n            },\n            showColumn: function (column) {\n                this._toggleColumnVisibility(column, false);\n            },\n            _toggleColumnVisibility: function (column, hidden) {\n                column = this._findColumn(column);\n                if (!column || column.hidden === hidden) {\n                    return;\n                }\n                column.hidden = hidden;\n                this._setParentsVisibility(column, !hidden);\n                this._ensureExpandableColumn();\n                this._renderCols();\n                this._renderHeader();\n                this._render();\n                this._adjustTablesWidth();\n                this.trigger(hidden ? COLUMNHIDE : COLUMNSHOW, { column: column });\n                if (!hidden && !column.width) {\n                    this.table.add(this.thead.closest('table')).width('');\n                }\n                this._updateFirstColumnClass();\n            },\n            _findColumn: function (column) {\n                if (typeof column == 'number') {\n                    column = this.columns[column];\n                } else if (isPlainObject(column)) {\n                    column = grep(leafColumns(this.columns), function (item) {\n                        return item === column;\n                    })[0];\n                } else {\n                    column = grep(leafColumns(this.columns), function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                return column;\n            },\n            _adjustTablesWidth: function () {\n                var idx, length;\n                var cols = this.thead.prev().children();\n                var colWidth, width = 0;\n                for (idx = 0, length = cols.length; idx < length; idx++) {\n                    colWidth = cols[idx].style.width;\n                    if (colWidth && colWidth.indexOf('%') == -1) {\n                        width += parseInt(colWidth, 10);\n                    } else {\n                        width = 0;\n                        break;\n                    }\n                }\n                if (width) {\n                    this.table.add(this.thead.closest('table')).width(width);\n                }\n            },\n            _reorderable: function () {\n                if (!this.options.reorderable) {\n                    return;\n                }\n                var scrollable = this.options.scrollable === true;\n                var selector = (scrollable ? '.k-grid-header:first ' : 'table:first>.k-grid-header ') + HEADERCELLS;\n                var that = this;\n                this._draggableInstance = new ui.Draggable(this.wrapper, {\n                    group: kendo.guid(),\n                    filter: selector,\n                    hint: function (target) {\n                        return $('<div class=\"k-header k-drag-clue\" />').css({\n                            width: target.width(),\n                            paddingLeft: target.css('paddingLeft'),\n                            paddingRight: target.css('paddingRight'),\n                            lineHeight: target.height() + 'px',\n                            paddingTop: target.css('paddingTop'),\n                            paddingBottom: target.css('paddingBottom')\n                        }).html(target.attr(kendo.attr('title')) || target.attr(kendo.attr('field')) || target.text()).prepend('<span class=\"k-icon k-drag-status k-i-cancel\" />');\n                    }\n                });\n                this.reorderable = new ui.Reorderable(this.wrapper, {\n                    draggable: this._draggableInstance,\n                    dragOverContainers: proxy(this._allowDragOverContainers, this),\n                    inSameContainer: function (e) {\n                        return $(e.source).parent()[0] === $(e.target).parent()[0] && targetParentContainerIndex(flatColumnsInDomOrder(that.columns), that.columns, e.sourceIndex, e.targetIndex) > -1;\n                    },\n                    change: function (e) {\n                        var columns = flatColumnsInDomOrder(that.columns);\n                        var column = columns[e.oldIndex];\n                        var newIndex = targetParentContainerIndex(columns, that.columns, e.oldIndex, e.newIndex);\n                        that.trigger(COLUMNREORDER, {\n                            newIndex: newIndex,\n                            oldIndex: inArray(column, columns),\n                            column: column\n                        });\n                        that.reorderColumn(newIndex, column, e.position === 'before');\n                    }\n                });\n            },\n            _allowDragOverContainers: function (sourceIndex, targetIndex) {\n                var columns = flatColumnsInDomOrder(this.columns);\n                return columns[sourceIndex].lockable !== false && targetParentContainerIndex(columns, this.columns, sourceIndex, targetIndex) > -1;\n            },\n            _reorderTrees: function (destSources, destContainer, destDomTree, sources, sourcesContainer, sourcesDomTree, before, depth) {\n                var ths = $();\n                var source = sourcesContainer.find('tr:eq(' + sources[0].rowIndex + ')');\n                var sourceDOM = sourcesDomTree.children[sources[0].rowIndex];\n                var sourceChildren = source.children();\n                var destDomChildren;\n                var currentIndex;\n                var destColumn = before ? destSources[0] : destSources[destSources.length - 1];\n                var destRow;\n                var sourcesLeafs;\n                var destLeafs;\n                var reorderTaget;\n                var destThs;\n                for (var idx = 0; idx < sources.length; idx++) {\n                    currentIndex = sources[idx].cellIndex;\n                    ths = ths.add(sourceChildren.eq(currentIndex));\n                    destDomChildren = destDomTree.children[destColumn.rowIndex].children;\n                    if (destDomTree === sourcesDomTree && before) {\n                        currentIndex += idx;\n                    }\n                    destDomChildren.splice(before ? destColumn.cellIndex + idx : destColumn.cellIndex + 1 + idx, 0, sourceDOM.children[currentIndex]);\n                }\n                if (destDomTree === sourcesDomTree && before) {\n                    sourceDOM.children.splice(sources[0].cellIndex + sources.length, sources.length);\n                } else {\n                    sourceDOM.children.splice(sources[0].cellIndex, sources.length);\n                }\n                destRow = destContainer.find('tr:eq(' + destColumn.rowIndex + ')');\n                destThs = destRow.find('>th.k-header:eq(' + destColumn.cellIndex + ')');\n                if (destThs.length && ths[0] !== destThs[0]) {\n                    ths[before ? 'insertBefore' : 'insertAfter'](destThs);\n                }\n                if (depth >= sources[0].rowIndex + 1 && depth != 1) {\n                    sourcesLeafs = [];\n                    for (idx = 0; idx < sources.length; idx++) {\n                        if (sources[idx].columns) {\n                            sourcesLeafs = sourcesLeafs.concat(sources[idx].columns);\n                        }\n                    }\n                    if (!sourcesLeafs.length) {\n                        return;\n                    }\n                    destLeafs = [];\n                    for (idx = 0; idx < destSources.length; idx++) {\n                        if (destSources[idx].columns) {\n                            destLeafs = destLeafs.concat(destSources[idx].columns);\n                        }\n                    }\n                    if (!destLeafs.length && (destContainer !== sourcesContainer || (destColumn.cellIndex - sources[0].cellIndex > 1 || sources[0].cellIndex - destColumn.cellIndex > 1))) {\n                        reorderTaget = findReorderTarget(this.columns, destColumn, sources[0], before, this.columns);\n                        destLeafs = [reorderTaget];\n                        if (!reorderTaget && sourcesLeafs.length && destContainer.find('tr').length > sources[0].rowIndex + 1) {\n                            this._insertTree(sourcesLeafs, sourcesContainer, sourcesDomTree, destContainer, destDomTree);\n                            return;\n                        }\n                    }\n                    if (!destLeafs.length) {\n                        return;\n                    }\n                    this._reorderTrees(destLeafs, destContainer, destDomTree, sourcesLeafs, sourcesContainer, sourcesDomTree, before, depth);\n                }\n            },\n            _insertTree: function (columns, sourcesContainer, sourcesDomTree, destContainer, destDomTree) {\n                var leafs = [];\n                var row;\n                var ths = $();\n                var domTr;\n                row = sourcesContainer.find('tr:eq(' + columns[0].rowIndex + ')');\n                domTr = sourcesDomTree.children[columns[0].rowIndex];\n                for (var idx = 0; idx < columns.length; idx++) {\n                    if (columns[idx].columns) {\n                        leafs = leafs.concat(columns[idx].columns);\n                    }\n                    destDomTree.children[columns[0].rowIndex].children.splice(idx, 0, domTr.children[columns[idx].rowIndex]);\n                    ths = ths.add(row.find('>th.k-header:eq(' + columns[idx].cellIndex + ')'));\n                }\n                sourcesDomTree.children[columns[0].rowIndex].children.splice(columns[0].cellIndex, columns.length);\n                destContainer.find('tr:eq(' + columns[0].rowIndex + ')').append(ths);\n                if (leafs.length) {\n                    this._insertTree(leafs, sourcesContainer, sourcesDomTree, destContainer, destDomTree);\n                }\n            },\n            _reorderHeader: function (destColumn, column, before) {\n                var sourcesDepth = column.columns ? depth([column]) : 1;\n                var targetDepth = destColumn.columns ? depth([destColumn]) : 1;\n                var sourceLocked = isLocked(column);\n                var destLocked = isLocked(destColumn);\n                var destContainer = destLocked ? this.lockedHeader : this.thead;\n                var sourcesContainer = sourceLocked ? this.lockedHeader : this.thead;\n                var destDomTree = destLocked ? this._lockedHeaderTree : this._headerTree;\n                var sourcesDomTree = sourceLocked ? this._lockedHeaderTree : this._headerTree;\n                var rowsToAdd;\n                var destRows = destContainer.find('tr');\n                if (sourcesDepth === targetDepth || sourcesDepth < destRows.length) {\n                    this._reorderTrees([destColumn], destContainer, destDomTree, [column], sourcesContainer, sourcesDomTree, before, sourcesDepth);\n                    updateRowSpans(destContainer, destDomTree);\n                    removeEmptyRows(sourcesContainer, sourcesDomTree);\n                } else {\n                    if (destContainer !== sourcesContainer) {\n                        rowsToAdd = sourcesDepth - destRows.length;\n                        destRows.each(function (idx) {\n                            var cells = this.cells;\n                            for (var i = 0; i < cells.length; i++) {\n                                if (cells[i].colSpan <= 1 && cells[i].attributes.rowspan) {\n                                    destDomTree.children[idx].children[i].attr.rowSpan += rowsToAdd;\n                                    cells[i].rowSpan += rowsToAdd;\n                                }\n                            }\n                        });\n                        for (var j = 0; j < rowsToAdd; j++) {\n                            destDomTree.children.push(kendoDomElement('tr', { 'role': 'row' }));\n                            if (destContainer.is('thead')) {\n                                destContainer.append('<tr role=\\'row\\'></tr>');\n                            } else {\n                                destContainer.find('thead').append('<tr role=\\'row\\'></tr>');\n                            }\n                        }\n                    }\n                    this._reorderTrees([destColumn], destContainer, destDomTree, [column], sourcesContainer, sourcesDomTree, before, sourcesDepth);\n                    removeEmptyRows(sourcesContainer, sourcesDomTree);\n                }\n            },\n            reorderColumn: function (destIndex, column, before) {\n                var lockChanged;\n                var parent = column.parentColumn;\n                var columns = parent ? parent.columns : this.columns;\n                var sourceIndex = inArray(column, columns);\n                var destColumn = columns[destIndex];\n                var isLocked = !!destColumn.locked;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                var nonLockedColumnsLength = nonLockedColumns(columns).length;\n                if (sourceIndex === destIndex) {\n                    return;\n                }\n                if (isLocked && !column.locked && nonLockedColumnsLength == 1) {\n                    return;\n                }\n                if (!isLocked && column.locked && columns.length - nonLockedColumnsLength == 1) {\n                    return;\n                }\n                if (before === undefined) {\n                    before = destIndex < sourceIndex;\n                }\n                if (hasMultiColumnHeaders) {\n                    this._reorderHeader(destColumn, column, before);\n                }\n                lockChanged = !!column.locked;\n                lockChanged = lockChanged != isLocked;\n                column.locked = isLocked;\n                columns.splice(before ? destIndex : destIndex + 1, 0, column);\n                columns.splice(sourceIndex < destIndex ? sourceIndex : sourceIndex + 1, 1);\n                this._setColumnDataIndexes(leafColumns(this.columns));\n                this._clearColsCache();\n                this._renderCols();\n                if (!hasMultiColumnHeaders) {\n                    var ths = $(this.lockedHeader).add(this.thead).find('th');\n                    ths.eq(sourceIndex)[before ? 'insertBefore' : 'insertAfter'](ths.eq(destIndex));\n                    var dom = this._headerTree.children[0].children;\n                    if (this._hasLockedColumns) {\n                        dom = this._lockedHeaderTree.children[0].children.concat(dom);\n                    }\n                    dom.splice(before ? destIndex : destIndex + 1, 0, dom[sourceIndex]);\n                    dom.splice(sourceIndex < destIndex ? sourceIndex : sourceIndex + 1, 1);\n                    if (this._hasLockedColumns) {\n                        this._lockedHeaderTree.children[0].children = dom.splice(0, lockedColumns(columns).length);\n                        this._headerTree.children[0].children = dom;\n                    }\n                } else {\n                    if (this.lockedHeader) {\n                        columns = nonLockedColumns(this.columns);\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], columns);\n                        columns = lockedColumns(this.columns);\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], columns);\n                    } else {\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], this.columns);\n                    }\n                }\n                this._updateColumnCellIndex();\n                this._applyLockedContainersWidth();\n                this._syncLockedHeaderHeight();\n                this._updateFirstColumnClass();\n                this.refresh();\n                if (!lockChanged) {\n                    return;\n                }\n                if (isLocked) {\n                    this.trigger(COLUMNLOCK, { column: column });\n                } else {\n                    this.trigger(COLUMNUNLOCK, { column: column });\n                }\n            },\n            lockColumn: function (column) {\n                var columns = this.columns;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                var index = lockedColumns(columns).length - 1;\n                this.reorderColumn(index, column, false);\n            },\n            unlockColumn: function (column) {\n                var columns = this.columns;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                var index = lockedColumns(columns).length;\n                this.reorderColumn(index, column, true);\n            },\n            _columnMenu: function () {\n                var ths = $(this.lockedHeader).add(this.thead).find('th');\n                var columns = this.columns;\n                var options = this.options;\n                var columnMenu = options.columnMenu;\n                var column, menu, menuOptions, sortable, filterable;\n                var initHandler = proxy(this._columnMenuInit, this);\n                var openHandler = proxy(this._columnMenuOpen, this);\n                var lockedColumnsLength = lockedColumns(columns).length;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (hasMultiColumnHeaders) {\n                    columns = leafColumns(columns);\n                    if (this.lockedHeader) {\n                        ths = sortCells(leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead)));\n                    } else {\n                        ths = leafDataCells(this.thead);\n                    }\n                } else {\n                    ths = $(this.lockedHeader).add(this.thead).find('th');\n                }\n                if (!columnMenu) {\n                    return;\n                }\n                if (typeof columnMenu == 'boolean') {\n                    columnMenu = {};\n                }\n                for (var i = 0; i < ths.length; i++) {\n                    column = columns[i];\n                    if (!column.field) {\n                        continue;\n                    }\n                    menu = ths.eq(i).data('kendoColumnMenu');\n                    if (menu) {\n                        menu.destroy();\n                    }\n                    sortable = false;\n                    if (column.sortable !== false && columnMenu.sortable !== false && options.sortable !== false) {\n                        sortable = extend({}, options.sortable, { compare: (column.sortable || {}).compare });\n                    }\n                    filterable = false;\n                    if (options.filterable && column.filterable !== false && columnMenu.filterable !== false) {\n                        filterable = extend({ pane: this.pane }, column.filterable, options.filterable);\n                    }\n                    menuOptions = {\n                        dataSource: this.dataSource,\n                        values: column.values,\n                        columns: columnMenu.columns,\n                        sortable: sortable,\n                        filterable: filterable,\n                        messages: columnMenu.messages,\n                        owner: this,\n                        closeCallback: $.noop,\n                        init: initHandler,\n                        open: openHandler,\n                        pane: this.pane,\n                        lockedColumns: !hasMultiColumnHeaders && column.lockable !== false && lockedColumnsLength > 0\n                    };\n                    if (options.$angular) {\n                        menuOptions.$angular = options.$angular;\n                    }\n                    ths.eq(i).kendoColumnMenu(menuOptions);\n                }\n            },\n            _columnMenuInit: function (e) {\n                this.trigger(COLUMNMENUINIT, {\n                    field: e.field,\n                    container: e.container\n                });\n            },\n            _pageable: function () {\n                var that = this, wrapper, pageable = that.options.pageable;\n                if (pageable) {\n                    wrapper = that.wrapper.children('div.k-grid-pager');\n                    if (!wrapper.length) {\n                        wrapper = $('<div class=\"k-pager-wrap k-grid-pager\"/>').appendTo(that.wrapper);\n                    }\n                    that._destroyPager();\n                    if (typeof pageable === 'object' && pageable instanceof kendo.ui.TreeListPager) {\n                        that.pager = pageable;\n                    } else {\n                        that._createPager(wrapper);\n                    }\n                    that.pager.bind(PAGE_CHANGE, function (e) {\n                        if (that.trigger(PAGE, { page: e.index })) {\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _createPager: function (element, options) {\n                var that = this;\n                that.pager = new TreeListPager(element, extend({}, that.options.pageable, { dataSource: that.dataSource }, options));\n            },\n            _destroyPager: function () {\n                if (this.pager) {\n                    this.pager.destroy();\n                }\n            },\n            _isPageable: function () {\n                var that = this;\n                return that.options.pageable && (!that.dataSource || that.dataSource && that.dataSource._isPageable());\n            },\n            _togglePagerVisibility: function () {\n                var that = this;\n                var pageable = that.options.pageable;\n                if (pageable && (isPlainObject(pageable) || pageable instanceof TreeListPager) && pageable.alwaysVisible === false) {\n                    that.wrapper.find('.k-grid-pager').toggle((that.dataSource.collapsedTotal() || 0) >= that.dataSource.pageSize());\n                }\n            }\n        });\n        function isInputElement(element) {\n            return $(element).is(':button,a,:input,a>.k-icon,textarea,span.k-select,span.k-icon,span.k-link,.k-input,.k-multiselect-wrap,.k-tool-icon');\n        }\n        function isLocked(column) {\n            if (!column.parentColumn) {\n                return !!column.locked;\n            }\n            return !!isLocked(column.parentColumn);\n        }\n        function findParentColumnWithChildren(columns, index, source, rtl) {\n            var target;\n            var locked = !!source.locked;\n            var targetLocked;\n            do {\n                target = columns[index];\n                index += rtl ? 1 : -1;\n                targetLocked = !!target.locked;\n            } while (target && index > -1 && index < columns.length && target != source && !target.columns && targetLocked === locked);\n            return target;\n        }\n        function findReorderTarget(columns, target, source, before, masterColumns) {\n            if (target.columns) {\n                target = target.columns;\n                return target[before ? 0 : target.length - 1];\n            } else {\n                var parent = columnParent(target, columns);\n                var parentColumns;\n                if (parent) {\n                    parentColumns = parent.columns;\n                } else {\n                    parentColumns = columns;\n                }\n                var index = inArray(target, parentColumns);\n                if (index === 0 && before && parentColumns.length !== 1) {\n                    index++;\n                } else if (index == parentColumns.length - 1 && !before && index !== 0) {\n                    index--;\n                } else if (index > 0 || index === 0 && !before && index !== 0) {\n                    index += before ? -1 : 1;\n                }\n                var sourceIndex = inArray(source, parentColumns);\n                target = findParentColumnWithChildren(parentColumns, index, source, sourceIndex > index);\n                var targetIndex = inArray(target, masterColumns);\n                if (target.columns && (!targetIndex || targetIndex === parentColumns.length - 1)) {\n                    return null;\n                }\n                if (target && target != source && target.columns) {\n                    return findReorderTarget(columns, target, source, before, masterColumns);\n                }\n            }\n            return null;\n        }\n        function leafColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (!columns[idx].columns) {\n                    result.push(columns[idx]);\n                    continue;\n                }\n                result = result.concat(leafColumns(columns[idx].columns));\n            }\n            return result;\n        }\n        function visibleChildColumns(columns) {\n            return grep(columns, function (column) {\n                return !column.hidden;\n            });\n        }\n        function isVisible(column) {\n            return visibleColumns([column]).length > 0;\n        }\n        function visibleColumns(columns) {\n            return grep(columns, function (column) {\n                var result = !column.hidden;\n                if (result && column.columns) {\n                    result = visibleColumns(column.columns).length > 0;\n                }\n                return result;\n            });\n        }\n        function normalizeColumns(columns, hide) {\n            return map(columns, function (column) {\n                var hidden;\n                if (!isVisible(column) || hide) {\n                    hidden = true;\n                }\n                if (column.columns) {\n                    column.columns = normalizeColumns(column.columns, hidden);\n                }\n                return extend({ hidden: hidden }, column);\n            });\n        }\n        function flatColumnsInDomOrder(columns) {\n            var result = flatColumns(lockedColumns(columns));\n            return result.concat(flatColumns(nonLockedColumns(columns)));\n        }\n        function targetParentContainerIndex(flatColumns, columns, sourceIndex, targetIndex) {\n            var column = flatColumns[sourceIndex];\n            var target = flatColumns[targetIndex];\n            var parent = columnParent(column, columns);\n            columns = parent ? parent.columns : columns;\n            return inArray(target, columns);\n        }\n        function parentColumnsCells(cell) {\n            var container = cell.closest('table');\n            var result = $().add(cell);\n            var row = cell.closest('tr');\n            var headerRows = container.find('tr');\n            var level = headerRows.index(row);\n            if (level > 0) {\n                var parent = headerRows.eq(level - 1);\n                var parentCellsWithChildren = parent.find('th').filter(function () {\n                    return !$(this).attr('rowspan');\n                });\n                var offset = 0;\n                var index = row.find('th').index(cell);\n                var prevCells = cell.prevAll().filter(function () {\n                    return this.colSpan > 1;\n                });\n                for (var idx = 0; idx < prevCells.length; idx++) {\n                    offset += prevCells[idx].colSpan || 1;\n                }\n                index += Math.max(offset - 1, 0);\n                offset = 0;\n                for (idx = 0; idx < parentCellsWithChildren.length; idx++) {\n                    var parentCell = parentCellsWithChildren.eq(idx);\n                    if (parentCell.attr('data-colspan')) {\n                        offset += parentCell[0].getAttribute('data-colspan');\n                    } else {\n                        offset += 1;\n                    }\n                    if (index >= idx && index < offset) {\n                        result = parentColumnsCells(parentCell).add(result);\n                        break;\n                    }\n                }\n            }\n            return result;\n        }\n        function childColumnsCells(cell) {\n            var container = cell.closest('thead');\n            var result = $().add(cell);\n            var row = cell.closest('tr');\n            var headerRows = container.find('tr');\n            var level = headerRows.index(row) + cell[0].rowSpan;\n            var colSpanAttr = kendo.attr('colspan');\n            if (level <= headerRows.length - 1) {\n                var child = row.next();\n                var prevCells = cell.prevAll();\n                var idx;\n                prevCells = prevCells.filter(function () {\n                    return !this.rowSpan || this.rowSpan === 1;\n                });\n                var offset = 0;\n                for (idx = 0; idx < prevCells.length; idx++) {\n                    offset += parseInt(prevCells.eq(idx).attr(colSpanAttr), 10) || 1;\n                }\n                var cells = child.find('th');\n                var colSpan = parseInt(cell.attr(colSpanAttr), 10) || 1;\n                idx = 0;\n                while (idx < colSpan) {\n                    child = cells.eq(idx + offset);\n                    result = result.add(childColumnsCells(child));\n                    var value = parseInt(child.attr(colSpanAttr), 10);\n                    if (value > 1) {\n                        colSpan -= value - 1;\n                    }\n                    idx++;\n                }\n            }\n            return result;\n        }\n        function columnParent(column, columns) {\n            var parents = [];\n            columnParents(column, columns, parents);\n            return parents[parents.length - 1];\n        }\n        function columnParents(column, columns, parents) {\n            parents = parents || [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (column === columns[idx]) {\n                    return true;\n                } else if (columns[idx].columns) {\n                    var inserted = parents.length;\n                    parents.push(columns[idx]);\n                    if (!columnParents(column, columns[idx].columns, parents)) {\n                        parents.splice(inserted, parents.length - inserted);\n                    } else {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        function flatColumns(columns) {\n            var result = [];\n            var children = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].columns) {\n                    children = children.concat(columns[idx].columns);\n                }\n            }\n            if (children.length) {\n                result = result.concat(flatColumns(children));\n            }\n            return result;\n        }\n        function columnPosition(column, columns, row, cellCounts) {\n            var result;\n            var idx;\n            row = row || 0;\n            cellCounts = cellCounts || {};\n            cellCounts[row] = cellCounts[row] || 0;\n            for (idx = 0; idx < columns.length; idx++) {\n                if (columns[idx] == column) {\n                    result = {\n                        cell: cellCounts[row],\n                        row: row\n                    };\n                    break;\n                } else if (columns[idx].columns) {\n                    result = columnPosition(column, columns[idx].columns, row + 1, cellCounts);\n                    if (result) {\n                        break;\n                    }\n                }\n                cellCounts[row]++;\n            }\n            return result;\n        }\n        function updateCellIndex(thead, columns, offset) {\n            offset = offset || 0;\n            var position;\n            var cell;\n            var allColumns = columns;\n            columns = leafColumns(columns);\n            var cells = {};\n            var rows = thead.find('>tr:not(.k-filter-row)');\n            var filter = function () {\n                var el = $(this);\n                return !el.hasClass('k-group-cell') && !el.hasClass('k-hierarchy-cell');\n            };\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                position = columnPosition(columns[idx], allColumns);\n                if (!cells[position.row]) {\n                    cells[position.row] = rows.eq(position.row).find('.k-header').filter(filter);\n                }\n                cell = cells[position.row].eq(position.cell);\n                cell.attr(kendo.attr('index'), offset + idx);\n            }\n            return columns.length;\n        }\n        function depth(columns) {\n            var result = 1;\n            var max = 0;\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (columns[idx].columns) {\n                    var temp = depth(columns[idx].columns);\n                    if (temp > max) {\n                        max = temp;\n                    }\n                }\n            }\n            return result + max;\n        }\n        function lockedColumns(columns) {\n            return grep(columns, is('locked'));\n        }\n        function nonLockedColumns(columns) {\n            return grep(columns, not(is('locked')));\n        }\n        function updateRowSpans(container, containerDOMtree) {\n            var rows = container.find('tr');\n            var length = rows.length;\n            rows.each(function (idx) {\n                var cells = this.cells;\n                for (var i = 0; i < cells.length; i++) {\n                    if (cells[i].colSpan <= 1 && cells[i].attributes.rowspan) {\n                        containerDOMtree.children[idx].children[i].attr.rowSpan = length - idx;\n                        cells[i].rowSpan = length - idx;\n                    }\n                }\n            });\n        }\n        function removeEmptyRows(container, containerDOMtree) {\n            var rows = container.find('tr');\n            var emptyRows = [];\n            rows.filter(function (idx) {\n                var shouldRemove = !$(this).children().length;\n                if (shouldRemove) {\n                    emptyRows.push(idx);\n                }\n                return shouldRemove;\n            }).remove();\n            for (var i = emptyRows.length - 1; i >= 0; i--) {\n                containerDOMtree.children.splice(emptyRows[i], 1);\n            }\n            updateRowSpans(container, containerDOMtree);\n        }\n        function focusTable(table, direct) {\n            var msie = browser.msie || browser.edge;\n            if (direct === true) {\n                table = $(table);\n                var scrollTop, scrollLeft;\n                scrollTop = table.parent().scrollTop();\n                scrollLeft = table.parent().scrollLeft();\n                if (msie) {\n                    try {\n                        table[0].setActive();\n                    } catch (e) {\n                        table[0].focus();\n                    }\n                } else {\n                    table[0].focus();\n                }\n                table.parent().scrollTop(scrollTop).scrollLeft(scrollLeft);\n            } else {\n                $(table).one('focusin', function (e) {\n                    e.preventDefault();\n                }).focus();\n            }\n        }\n        function adjustRowHeight(row1, row2) {\n            var height;\n            var offsetHeight1 = row1.offsetHeight;\n            var offsetHeight2 = row2.offsetHeight;\n            if (offsetHeight1 > offsetHeight2) {\n                height = offsetHeight1 + 'px';\n            } else if (offsetHeight1 < offsetHeight2) {\n                height = offsetHeight2 + 'px';\n            }\n            if (height) {\n                row1.style.height = row2.style.height = height;\n            }\n        }\n        function isColumnEditable(column, model) {\n            if (!column || !model || !column.field || column.selectable || column.command || column.editable && !column.editable(model)) {\n                return false;\n            }\n            return column.field && model.editable && model.editable(column.field);\n        }\n        function isDirtyColumn(column, model) {\n            var field = (column || {}).field || '';\n            return model.dirty && model.dirtyFields && model.dirtyFields[field] && isColumnEditable(column, model);\n        }\n        function isUndefined(value) {\n            return typeof value === 'undefined';\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        if (kendo.ExcelMixin) {\n            kendo.ExcelMixin.extend(TreeList.prototype);\n        }\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(TreeList.prototype);\n            TreeList.prototype._drawPDF = function (progress) {\n                var treeList = this;\n                if (treeList.options.pdf.paperSize && treeList.options.pdf.paperSize != 'auto') {\n                    return treeList._drawPDF_autoPageBreak(progress);\n                }\n                var result = new $.Deferred();\n                var dataSource = treeList.dataSource;\n                var allPages = treeList.options.pdf.allPages;\n                this._initPDFProgress(progress);\n                var doc = new kendo.drawing.Group();\n                var startingPage = dataSource.page();\n                function resolve() {\n                    if (allPages && startingPage !== undefined) {\n                        dataSource.unbind('change', exportPage);\n                        dataSource.one('change', function () {\n                            result.resolve(doc);\n                        });\n                        dataSource.page(startingPage);\n                    } else {\n                        result.resolve(doc);\n                    }\n                }\n                function exportPage() {\n                    treeList._drawPDFShadow({ width: treeList.wrapper.width() }, { avoidLinks: treeList.options.pdf.avoidLinks }).done(function (group) {\n                        var pageNum = dataSource.page();\n                        var totalPages = allPages ? dataSource.totalPages() : 1;\n                        var args = {\n                            page: group,\n                            pageNumber: pageNum,\n                            progress: pageNum / totalPages,\n                            totalPages: totalPages\n                        };\n                        progress.notify(args);\n                        doc.append(args.page);\n                        if (pageNum < totalPages) {\n                            dataSource.page(pageNum + 1);\n                        } else {\n                            resolve();\n                        }\n                    }).fail(function (err) {\n                        result.reject(err);\n                    });\n                }\n                if (allPages) {\n                    dataSource.bind('change', exportPage);\n                    dataSource.page(1);\n                } else {\n                    exportPage();\n                }\n                return result.promise();\n            };\n            TreeList.prototype._initPDFProgress = function (deferred) {\n                var loading = $('<div class=\\'k-loading-pdf-mask\\'><div class=\\'k-loading-color\\'/></div>');\n                loading.prepend(this.wrapper.clone().css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                }));\n                this.wrapper.append(loading);\n                var progressBar = $('<div class=\\'k-loading-pdf-progress\\'>').appendTo(loading).kendoProgressBar({\n                    type: 'chunk',\n                    chunkCount: 10,\n                    min: 0,\n                    max: 1,\n                    value: 0\n                }).data('kendoProgressBar');\n                deferred.progress(function (e) {\n                    progressBar.value(e.progress);\n                }).always(function () {\n                    kendo.destroy(loading);\n                    loading.remove();\n                });\n            };\n            TreeList.prototype._drawPDF_autoPageBreak = function (progress) {\n                var treeList = this;\n                var result = new $.Deferred();\n                var dataSource = treeList.dataSource;\n                var allPages = treeList.options.pdf.allPages;\n                var origBody = treeList.wrapper.find('table[role=\"treeList\"] > tbody');\n                var cont = $('<div>').css({\n                    position: 'absolute',\n                    left: -10000,\n                    top: -10000\n                });\n                var clone = treeList.wrapper.clone().css({\n                    height: 'auto',\n                    width: 'auto'\n                }).appendTo(cont);\n                clone.find('.k-grid-content').css({\n                    height: 'auto',\n                    width: 'auto',\n                    overflow: 'visible'\n                });\n                clone.find('table[role=\"treeList\"], .k-grid-footer table').css({\n                    height: 'auto',\n                    width: '100%',\n                    overflow: 'visible'\n                });\n                clone.find('.k-grid-pager, .k-grid-toolbar, .k-grouping-header').remove();\n                clone.find('.k-grid-header, .k-grid-footer').css({ paddingRight: 0 });\n                this._initPDFProgress(progress);\n                var body = clone.find('table[role=\"treeList\"] > tbody').empty();\n                var startingPage = dataSource.page();\n                function resolve() {\n                    if (allPages && startingPage !== undefined) {\n                        dataSource.one('change', draw);\n                        dataSource.page(startingPage);\n                    } else {\n                        treeList.refresh();\n                        draw();\n                    }\n                }\n                function draw() {\n                    cont.appendTo(document.body);\n                    var options = $.extend({}, treeList.options.pdf, {\n                        _destructive: true,\n                        progress: function (p) {\n                            progress.notify({\n                                page: p.page,\n                                pageNumber: p.pageNum,\n                                progress: 0.5 + p.pageNum / p.totalPages / 2,\n                                totalPages: p.totalPages\n                            });\n                        }\n                    });\n                    kendo.drawing.drawDOM(clone, options).always(function () {\n                        cont.remove();\n                    }).then(function (group) {\n                        result.resolve(group);\n                    }).fail(function (err) {\n                        result.reject(err);\n                    });\n                }\n                function renderPage() {\n                    var pageNum = dataSource.page();\n                    var totalPages = allPages ? dataSource.totalPages() : 1;\n                    body.append(origBody.find('tr'));\n                    if (pageNum < totalPages) {\n                        dataSource.page(pageNum + 1);\n                    } else {\n                        dataSource.unbind('change', renderPage);\n                        resolve();\n                    }\n                }\n                if (allPages) {\n                    dataSource.bind('change', renderPage);\n                    dataSource.page(1);\n                } else {\n                    renderPage();\n                }\n                return result.promise();\n            };\n        }\n        extend(true, kendo.data, {\n            TreeListDataSource: TreeListDataSource,\n            TreeListModel: TreeListModel\n        });\n        ui.plugin(TreeList);\n        ui.plugin(TreeListPager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}